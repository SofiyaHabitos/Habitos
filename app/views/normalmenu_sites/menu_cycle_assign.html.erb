 
<% id = session[:kitchen_user_id] %>
  

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.4/css/bootstrap-select.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.6/moment-with-locales.js"></script>  

    <link href="//cdn.rawgit.com/indrimuska/angular-moment-picker/master/dist/angular-moment-picker.min.css" rel="stylesheet">
    <script src="//cdn.rawgit.com/indrimuska/angular-moment-picker/master/dist/angular-moment-picker.min.js"></script>
   
</head>
<body class="ag-body" ng-app="menu_cycle" ng-controller="MenuCycleCtrl" ng-init="onInit()" ng-class="{'sidebar-collapse' : toggle}">
<style>
  .modal-dialog {
    max-width: 999px;
  }

  div.panel-heading.test{
    color:red;
  }

  .planner-title.page_title .btn-primary {
    color: #fff;
    background-color: #ed5323 !important;
    border-color: #e24b1c !important;
  }
/*  .previous {
    color:#ed5323;
    padding: 10px;
  }
  .next {
    color:#ed5323;
    padding: 10px;
  }
  .current{
    color:#ed5323;
    padding: 10px;
  }*/
  a.previous{
  border-radius: 50%;
  background: #eee3df;
 }
 
 a.next{
  border-radius: 50%;
  background: #eee3df;
 }
</style>



<section class="page-content">
<div class="container-fluid">
  <div class="row container_pad">
    <div class="col-md-12 loading" ng-show="spinner">
      <img src="/assets/green_spinner.gif" height="70">
      <!-- <img src="/assets/cooking_loader_2.gif"> -->
    </div>
    <div class="col-md-9 menu_body menuplanner_main_content">
   
      <div class="title_head">
        <h1 class="planner-title page_title">Menu Cycle Assign<!-- <span style="font-size:24px;padding-left: 50px !important;color:#ed5323;cursor:pointer;" data-toggle="modal" data-target="#myduplicatemodal1">Duplication</span> -->
        <!-- <button class="btn btn-primary ml-4" data-toggle="modal" data-target="#myduplicatemodal1">Duplication</button> --> <!-- <i class="fa fa-copy" style="font-size:24px;padding-left: 50px !important;" data-toggle="modal" data-target="#myduplicatemodal1"></i> --></h1>

        
        <button class="btn collapse-sidebar" ng-click="toggle = !toggle"><div class="hover-eff"></div><i class="fas fa-arrow-left"></i><i class="fas fa-arrow-right"></i></button>
      </div>
      <div class="row">
        <div class="col-md-3">
          <div class="control floating_label">
            <input type="text" class="input-text" name="plan-name" title="Plan Name" ng-model="planName" disabled="true">
          </div>
        </div>
        <div class="col-md-3">
          <div class="control floating_label" moment-picker="ctrl.datepicker" format="DD-MM-YYYY">
            <input type="text" name="date" class="input-text" placeholder="Date" value="{{date}}" disabled="true">
            <span class="input-icon">
              <i class="far fa-calendar-alt"></i>
            </span>
          </div>
        </div> 
        <div class="col-md-3 d-flex align-items-center">
          <label class="checkbox-label"><input type="checkbox" class="abc custom_checkbox" ng-model="qty" name="qty"> <span>Show Qty</span></label>
        </div>
        <div class="col-md-3 previousAssign" ng-show="showHistory">
          <a href="#" class="previous" ng-click="loadPrevious()"><div class="hover-eff"></div><i class="fas fa-arrow-left"></i></a>
          <a href="#" class="current" ng-click="loadCurrent()">Current</a>
          <a href="#" class="next" ng-click="loadNext()"><div class="hover-eff"></div><i class="fas fa-arrow-right"></i></a>
        </div>
      </div>

      <div id="menuplanner_accordion">
        <div class="card" ng-class="{'card_expand':category.category_name==expandableMealtime}" ng-repeat="category in mealtime track by $index" ng-init="parentIndex = $index">
          <div class="card-header" id="headingOne"> <!-- ng-class="{'test':selected[$index]==getSelected(category.category_name, $index)}" -->
            <h5 class="mb-0">
              <button class="btn collapsed" data-toggle="collapse" data-target="#collapse{{$index}}" aria-expanded="{{category.category_name==expandableMealtime }}" aria-controls="collapse{{$index}}" ng-click="showClickIcon($index)" ng-cloak>
                {{category.category_name}} <span ng-show="category.category_name==reAssign_MealTime && additionRange[0].includes('Day')==false && comparedDate==true && menuAssignState==false" ng-click="reAssign(category)">Reassign</span>&nbsp;&nbsp;<!-- <span ng-show="category.category_name==reAssign_MealTime && additionRange[0].includes('Day')==false && comparedDate==true && menuAssignState==false" ng-click="openModal()" data-toggle="modal" data-target="#myduplicatemodal">Duplication</span> -->
              </button>
            </h5>
            
          </div>

          <div id="collapse{{$index}}" class="collapse" ng-class="{'show':category.category_name==expandableMealtime}" aria-labelledby="headingOne" data-parent="#menuplanner_accordion">
            <div class="card-body">
              <div class="table_overflow">
                <table class="table table-striped table-bordered table-hover display" cellspacing="0">
                  <thead>
                    <th style="background-color: #FFFFFF;width: 100px !important;" ng-repeat="dataa in additionRange track by $index" ng-init="headerDate= $index +1;check=$index" ng-if="$index >=  startIndex && $index <= endIndex">
                      <!-- {{$index >=  startIndex && $index <= endIndex }} -->
                     <label class="checkbox-label">
                        <span class="div-right">
                          <a href="#" editable-bsdate="dateEdit" e-is-open="opened.$data" e-ng-click="open($event,'$data')" e-ng-change="scopeFunction($data)" e-datepicker-popup="dd-MMMM-yyyy" onbeforesave="checkName($data,$index)" edit-disabled="getDisabledData && showHistory" e-min-Date="cycleMinDate">{{ (Range[$index] | date:"dd-MM-yyyy") }}<i class="fas fa-calendar-alt ml-1"></i></a>
                        </span>
                        <input type="checkbox" class="custom_checkbox"
                         ng-model="dateRange[parentIndex][category.category_name][0][dataa][0].CheckAll"
                         ng-change="toggleAll(parentIndex,category.category_name,dataa,dateRange[parentIndex][category.category_name][0][dataa][0].CheckAll)" ng-disabled="dateRange[parentIndex][category.category_name].length==0 || getDisabledData && showHistory">
                     </label>
                    </th>
                  </thead>
                  <tbody>
                    <tr ng-repeat="data1 in addRow[$index]" ng-init="dataindex = $index">
                      <td ng-repeat="date in dateRange[parentIndex][category.category_name][$index] track by $index" ng-init="data = $index +1;check=$index" ng-if="dataLoaded==true && $index >=  startIndex && $index <= endIndex" ng-click="showTable(parentIndex,dataindex,$index,recipe,category.category_name,date)"> <!-- && startIndex>check && endIndex>check -->
                        
                        <input class="custom_checkbox" type="checkbox" 
                        ng-model="date[0].rowSelect" 
                        ng-change="optionToggled(parentIndex,category.category_name,$index,date[0].rowSelect)" ng-disabled="getDisabledData && showHistory" >

                        <div ng-hide="recipe && date[0].tableShrink" name='country' id="category" custom-select="cate as cate.FoodCategory for cate in categories.RecepieCategoryWise | filter: $searchTerm" custom-select-options="level1Options" ng-model="category_type" style="width:100%" ng-change="recipePush(category_type)" ng-init="category_type=dropDown1(date)" ng-disabled="getDisabledData && showHistory"  required></div>
                        
                        <div ng-hide="recipe && date[0].tableShrink" name='recipe_name' id="reciperecipe" custom-select="recipe as recipe.RecepieName for recipe in category_type.Foodrecipielist | filter: $searchTerm" ng-model="recipe" cs-depends-on="category_type" ng-change="recipePush(parentIndex,dataindex,$index,recipe,category.category_name,data)" ng-init="recipe=dropDown2(date,category_type.Foodrecipielist)" ng-disabled="getDisabledData && showHistory" style="width:100%" required></div>
                        <!-- <p ng-show="recipe && date[0].tableShrink" ng-click="showTable(parentIndex,dataindex,$index,recipe,category.category_name,date)">{{recipe.RecepieName}}</p>  -->

                        <p ng-show="recipe && date[0].tableShrink">{{recipe.RecepieName}}<br><i style="color: #ed5323;" ng-show="category_type && qty">(qty:{{(dateRange[parentIndex][category.category_name][dataindex][additionRange[$parent.$index]][0].Portion_size * getquantity).toFixed(2)}}&nbsp;{{dateRange[parentIndex][category.category_name][dataindex][additionRange[$parent.$index]][0].UOM}})</i></p>
                        <!-- <span class="showrecipe" ng-if="category_type && qty">
                         Quantity :{{(dateRange[parentIndex][category.category_name][dataindex][additionRange[$parent.$index]][0].Portion_size * getquantity).toFixed(2)}}&nbsp;{{dateRange[parentIndex][category.category_name][dataindex][additionRange[$parent.$index]][0].UOM}}
                        </span> -->
                        <span class="showrecipe" ng-show="category_type && qty && !date[0].tableShrink">

                          <span style="color: #ed5323;" ng-cloak> Quantity :{{(dateRange[parentIndex][category.category_name][dataindex][additionRange[$parent.$index]][0].Portion_size * getquantity).toFixed(2)}}&nbsp;{{dateRange[parentIndex][category.category_name][dataindex][additionRange[$parent.$index]][0].UOM}}
                          </span>
                        </span>
                      </td>
                    </tr>
                  </tbody>                       
                </table>
              </div>
              <button class="btn addrow" ng-disabled="getDisabledData && showHistory" ng-click="rowAdd($index,category.category_name)" ng-hide="!no_of_days">+ Add row</button> 
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- <div id="myduplicatemodal" class="modal fade" role="dialog" >
       <div class="modal-dialog" style="max-height: 50%;max-width: 50%;margin-top: 25%;margin-left: 15%;">
          <div class="modal-content">
            <div class="modal-header">
                    <h4 class="modal-title">Duplicate Plan</h4><span class="ti-close" data-dismiss="modal"></span>
            </div>
              <div class="modal-body modal-scroll">
                <label style="margin-left: 17%;">Select Plan Name:&nbsp;&nbsp;</label>
                  
                <br>
                <div class="save">
                 <button type="button" class="btn btn" data-dismiss="modal">save</button>
                 <button type="button" class="btn btn_cancel" data-dismiss="modal">cancel</button>
                </div>
              </div>
          </div>
        
      </div>
    </div -->>
    <div class="col-md-3 side_plan_item bgcolor menuplanner_sidebar">
      <div class="row planned_unplanned">
        <div class="col-md-6">
          <div class="card" data-toggle="modal" data-target="#myModal1">
              <div class="card-body">
                <h6>Planned</h6>
                <h2 ng-cloak>{{planned_count.count[0].planned}}</h2>
              </div>
          </div>
        </div>
        <div class="col-md-6">
          <div class="card" data-toggle="modal" data-target="#myModal2">
              <div class="card-body">
                <h6>Un Planned</h6>
                <h2 ng-cloak>{{planned_count.count[0].Unplanned}}</h2>         
              </div>
          </div>
        </div>
      </div>

      <div class="meal_course" ng-init="assignedTenants()">
        <h6 class="title">Assigned Clients</h6>
        <div class="accordion" id="assigned_clients">
          <div class="card mb-2" ng-repeat="list in getTenants track by $index" ng-init="tourIndex = $index">
            <div class="card-header p-0" id="header_{{tourIndex}}">
              <h2 class="mb-0">
                <button class="btn collapsed" type="button" data-toggle="collapse" data-target="#client_{{tourIndex}}" aria-expanded="false" aria-controls="client_{{tourIndex}}" ng-cloak>
                  {{list.sub.sub_plan_name}}
                </button>
              </h2>
            </div>
            <div id="client_{{tourIndex}}" class="collapse" aria-labelledby="header_{{tourIndex}}" data-parent="#assigned_clients">
              <div class="card-body">
                <div class="d-flex align-items-center justify-content-between mb-2" ng-repeat="tenant in list.tenant track by $index">
                  <button class="btn btn-client" ng-click="InitialLoad(tenant)" ng-cloak><div class="hover-btn-eff"></div>{{tenant.tenant_name}} - <span style="color:#ed5323;">{{tenant.meal_time}}</span></button>
                  <label class="checkbox-label">
                    <div class="hover-icon-eff"></div>
                    <input class="custom_checkbox " type="checkbox" ng-model="tenant.assign"  ng-checked="tenant.assign" name="check_tenant" ng-change="checkTenantUpdate(tenant.assign,$parent.$index,$index)">
                  </label>
                  <button type="button" class="btn btn-link"  ng-show="list.tenant.length==$index+1" ng-click="updateTenant(list.tenant,tourIndex)">Update</button>
                </div>
              </div>
            </div>
          </div>
        </div>
       <!--  <a href="/normalmenu_sites/menu_cycle" role="button" class="btn btn-primary proceed">Proceed to Menu</a> -->
        <div class="clearfix"></div>
      </div>

<!--       <div class="meal_course" ng-init="assignedTenants()">
        <label class="title">Assigned Clients</label><br><br>
        <div class="panel panel-default" ng-repeat="list in getTenants track by $index" ng-init="tourIndex = $index">
          <div class="panel-heading">
            <h4 class="panel-title">
              <i data-toggle="collapse" href="#123_{{tourIndex}}">
                {{list.sub.sub_plan_name}} 
              </i>
            </h4>
          </div>
          <div id="123_{{tourIndex}}" class="panel-collapse collapse">

            <div class="panel-body">
              <div ng-repeat="tenant in list.tenant track by $index">
                <input type="checkbox" ng-model="tenant.assign"  ng-checked="tenant.assign" name="check_tenant"><span ng-click="InitialLoad(tenant)">{{tenant.tenant_name}}</span>
                
                <button type="button" class="btn btn-primary"  ng-if="list.tenant.length==$index+1" style="float:right;margin-top: 10px;" ng-click="updateTenant(list.tenant,tourIndex)"> Update</button> 
              </div> 
            
            </div>
            
          </div>
        </div>
      </div> -->
      <div class="row">
        <div class="col-md-6">
          <div class="plancount">
              <label class="title">Client Type</label>
              <ul class="items">
                <li ng-repeat="client in clientList">
                  <label class="radio-label">
                    <input class="custom_radio" type="radio" ng-model="$parent.clientType" name="clienttype" value="{{client.name}}" ng-click="ClientType(client,'test')" disabled="true"> 
                    <span ng-cloak>{{client.name}}</span>
                  </label>
                </li>
              </ul>
          </div>
        </div>
        <div class="col-md-6">
          <div class="plancount">
              <label class="title">Client Category</label> <!-- ng-if="studenType != null" -->
              <ul class="items">
                <li ng-repeat="student in student_type">
                  <label class="radio-label">
                    <input class="custom_radio" type="radio" ng-model="$parent.studenType" name="studentype" value="{{student.name}}" ng-click="stud_type('Default')" disabled="true">
                    <span ng-cloak>{{student.name}}</span>
                  </label>
                </li>
              </ul>
          </div>
        </div>
      </div>

      <div class="row">
        <div class="col-md-12">
          <div class="plancount">
            <label class="title">Spread Type</label>
            <ul class="items">
              <li ng-repeat="spread in SpreadName">
                <label class="radio-label">
                  <input class="custom_radio" type="radio" ng-model="$parent.spread_name" name="spread" value="{{spread.spreadtype}}" ng-click="stud_type('Default')" disabled="true">
                  <span ng-cloak>{{spread.spreadtype}}</span>
                </label>
              </li>
            </ul>
          </div>
        </div>
        <!-- <div class="col-md-6">
          <div class="plancount">
            <label class="title">Meal Type</label>
            <ul class="items">
              <li ng-repeat="meal in meal_type">
                <label class="radio-label">
                  <input class="custom_radio" type="radio" ng-model="$parent.mealname" name="meal_type" value="{{meal.name}}" ng-click="stud_type(meal)">
                  <span>{{meal.name}}</span>
                </label>
              </li>
            </ul>
          </div>
        </div> -->
      </div>

      <div class="row">
        <div class="col-md-12">
          <div class="plancount" ng-init="multidropdown()">
            <label class="title">Meal Course</label>
            <select title="Choose Meal course" ng-model="mealCourseName" required  style="width:100%" ng-change="stud_type('Default')" disabled="true"> 
              <option ng-repeat="course in mealtime">{{course.category_name}}</option>
            </select>
          </div>
        </div>
      </div>
      <div class="row mt-3 mb-3">
        <div class="col-md-12">
          <a href="/normalmenu_sites/menu_cycle" role="button" class="btn btn-primary proceed">Proceed </a>
          <a href="/menu_customers/cook_sheet_edit" role="button" class="btn btn-primary proceed">Cook Sheet</a>
        </div>
      </div>


<!--       <div class="row">
        <div class="col-md-12">
          <div class="plancount" ng-init="onInit()">
            <label class="title">Client Name</label>
            <ul class="items" ng-repeat="list in tenant_list">
              <li>
                <label class="checkbox-label">
                  <input class="custom_checkbox" type="checkbox" ng-model="list.checked"  ng-checked="list.checked" ng-change="check()" name="tenant_type" value="{{list.name}}">
                  <span>{{list.name}}</span>
                </label>
              </li>
            </ul>
          </div>
        </div>
      </div> -->
      <!-- <button class="btn btn-primary assign_btn" ng-click="menuAssign()" ng-disabled="!menu_plan_name || !ctrl.datepicker || !clientType || !mealCourseName  || !no_of_days || !studenType && clientType!='Corporate' || !spread_name || !mealname || !tenantCheckStatus">Assign</button>
      <a href="/normalmenu_sites/menu_cycle" role="button" class="btn btn-primary proceed">Proceed to Menu</a> -->
    </div>
    <div id="myModal1" class="modal fade" role="dialog">
      <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
          <div class="modal-header">
            <h4 class="modal-title">Planned Details</h4><span class="ti-close" data-dismiss="modal"></span>

            <!-- <button type="button" class="close" data-dismiss="modal">&times;</button> -->
          </div>
          <div class="modal-body modal-scroll">
            <table class="table table-striped">
              <thead>
                <tr>
                  <th>Plan Name</th>
                  <th>Client Name</th>
                  <th>Meal Time</th>
                  <th>Clien Type Name</th>
                  <th>Client Category Name</th>
                  <th>Spread Name</th>
                </tr>
              </thead>
              <tbody>
                <tr ng-repeat="plan in planned_count.planned_details">
                  <td>{{plan.plan_name}}</td>
                  <td>{{plan.tenant_name}}</td>
                  <td>{{plan.meal_time}}</td>
                  <td>{{plan.client_type}}</td>
                  <td>{{plan.stud_type}}</td>
                  <td>{{plan.spread_type}}</td>
                </tr>
              </tbody>
            </table>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn_cancel" data-dismiss="modal">Close</button>
          </div>
        </div>

      </div>
    </div>
    <div id="myModal2" class="modal fade" role="dialog">
      <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
          <div class="modal-header">
                  <h4 class="modal-title">Unplanned Details</h4><span class="ti-close" data-dismiss="modal"></span>

            <!-- <button type="button" class="close" data-dismiss="modal">&times;</button> -->
          </div>
          <div class="modal-body modal-scroll">
            <table class="table table-striped">
              <thead>
                <tr>
                  <th>Plan Name</th>
                  <th>Client Name</th>
                  <th>Meal Time</th>
                  <th>Clien Type Name</th>
                  <th>Client Category Name</th>
                  <th>Spread Name</th>
                </tr>
              </thead>
              <tbody>
                <tr ng-repeat="plan in planned_count.unplanned_details">
                  <td>{{plan.plan_name}}</td>
                  <td>{{plan.tenant_name}}</td>
                  <td>{{plan.meal_time}}</td>
                  <td>{{plan.client_type}}</td>
                  <td>{{plan.stud_type}}</td>
                  <td>{{plan.spread_type}}</td>
                </tr>
              </tbody>
            </table>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn_cancel" data-dismiss="modal">Close</button>
          </div>
        </div>

      </div>
    </div>
    <!-- <div id="myduplicatemodal" class="modal fade" role="dialog" >
       <div class="modal-dialog" style="max-height: 50%;max-width: 50%;margin-top: 25%;margin-left: 15%;">
          <div class="modal-content">
            <div class="modal-header">
                    <h4 class="modal-title">Plan Duplication</h4><span class="ti-close" data-dismiss="modal"></span>
            </div>
              <div class="modal-body modal-scroll">
                <label style="margin-left: 17%;">Select Plan Name:&nbsp;&nbsp;</label>
                  <select ng-model="duplicateValue" ng-change="duplication(duplicateValue)" style="width:20%;" ng-options ="plan as plan.plan_name for plan in optionvalue">
                    <option value="">Select Plan</option>
                  </select>
                <br>
                <div class="save">
                 <button type="button" class="btn btn" ng-click="duplicateitems(duplicateValue,date,category_type.Foodrecipielist)" data-dismiss="modal">Duplicate</button>
                 <button type="button" class="btn btn_cancel" data-dismiss="modal">Cancel</button>
                </div>
              </div>
          </div>
        
      </div>
    </div> -->
    <div id="myduplicatemodal" class="modal fade" role="dialog" >
       <div class="modal-dialog" style="width: 500px">
          <div class="modal-content">
            <div class="modal-header">
                    <h4 class="modal-title">Plan Duplication</h4><span class="ti-close" data-dismiss="modal"></span>

            </div>
            <div class="modal-body modal-scroll">
              <div class="control floating_label" > 
                  
                  <select class="input-text" ng-model="duplicateValue" ng-change="duplication(duplicateValue)" ng-options ="plan as plan.plan_name for plan in optionvalue">
                    <option value="">Select Plan</option>
                  </select>
                  <label class="input-text-placeholder" for="plan">Select Plan Name</label>
              </div>  
                <!-- <label style="margin-left: 17%;">New Plan Name:&nbsp;&nbsp;</label>
                <input type="text" ng-model="new_plan"> -->
            </div>
            <div class="footer">
              <button type="button" class="btn btn_cancel" data-dismiss="modal">Cancel</button>
              <button type="button" class="btn btn_submit" data-dismiss="modal" ng-click="duplicateitems(duplicateValue,date,category_type.Foodrecipielist)">Duplicate</button>
            </div>
          </div>
        
      </div>
    </div>
    <!-- <div id="myduplicatemodal1" class="modal fade" role="dialog">
       <div class="modal-dialog" style="max-height: 50%;max-width: 50%;margin-top: 25%;margin-left: 15%;">
          <div class="modal-content">
            <div class="modal-header">
                    <h4 class="modal-title">Duplicate & Create a Plan as New Plan</h4><span class="ti-close" data-dismiss="modal"></span>
            </div>
              <div class="modal-body modal-scroll">
                <label style="margin-left: 17%;">New Plan Name:&nbsp;&nbsp;</label>

                  <select ng-model="duplicateValue" ng-change="duplication(duplicateValue)" style="width:20%;" ng-options ="plan as plan.plan_name for plan in optionvalue">
                    <option value="">Select Plan</option>
                  </select>
                  <input type="text" class="input-text" name="new-plan-name" title="Plan Name" ng-model="NewPlanName"> 
                <br>
                <div class="save">
                 <button type="button" class="btn btn"  data-dismiss="modal" ng-click="createADNPlan()">Create</button>
                 <button type="button" class="btn btn_cancel" data-dismiss="modal">Cancel</button>
                </div>
              </div>
          </div>
        
      </div>
    </div> -->
    <div id="myduplicatemodal1" class="modal fade" role="dialog" >
       <div class="modal-dialog" style="width: 500px">
          <div class="modal-content">
            <div class="modal-header">
                    <h4 class="modal-title">Full Plan Duplication</h4><span class="ti-close" data-dismiss="modal"></span>

            </div>
            <div class="modal-body modal-scroll">
              <div class="control floating_label">
                <!-- <input type="text" class="input-text" title="New Plan Name" ng-model="new_plan" required autofocus="true"> -->
                <input type="text" class="input-text" name="new-plan-name" title="Plan Name" ng-model="NewPlanName" required focus-me="shouldBeOpen">
                <label class="input-text-placeholder" for="plan_name">New Plan Name</label>
              </div>
                <!-- <label style="margin-left: 17%;">New Plan Name:&nbsp;&nbsp;</label>
                <input type="text" ng-model="new_plan"> -->
            </div>
            <div class="footer">
              <button type="button" class="btn btn_cancel" data-dismiss="modal">Cancel</button>
              <button type="button" class="btn btn_submit" data-dismiss="modal" ng-click="createADNPlan()">Create</button>
            </div>
          </div>
        
      </div>
    </div>
  </div>
</div>
</section>

</body>

<script type="text/javascript">
    $(document).ready(function() {
        /*$('#multi-select-demo').multiselect();*/
        $('.selectpicker').selectpicker();
    });

</script>

<script type="text/javascript">
var app = angular.module('menu_cycle', ["xeditable","ui.bootstrap",'AxelSoft']);
app.run(['editableOptions', function(editableOptions) {
  editableOptions.theme = 'bs3'; // bootstrap3 theme. Can be also 'bs2', 'default'
}]);
app.controller('MenuCycleCtrl', function($scope,$http,$rootScope,$window,$filter) {

//var plannerURL="http://api.idlidabba.com"
//var plannerURL="http://api.learnstein.com:81"
/*var plannerURL="http://192.168.1.73:3005";
var PimURL="http://192.168.0.48:8080";
*/

var plannerURL="<%= $api_service%>"
// var PimURL="http://182.72.104.66:8080"

var PimURL = '<%= $pim_core_service%>'  // "http://35.154.62.156"

$scope.planName="<%= params[:plan_name] %>";
$scope.dataLoaded=false;
$scope.shouldBeOpen=true;
$scope.spinner=true;
$scope.getquantity=1;
$scope.duplicateRange=[];
$scope.addDuplicateRange=[];
$scope.recipe="";
$scope.no_of_days="";
$scope.LoadState ="false";
$scope.menuAssignState=true;
$scope.getDisabledData=false;
$scope.showHistory=false;
$scope.expandableMealtime="";
var count = $scope.no_of_days;

$scope.menu_assign_date="";
$scope.check;

$scope.selected=[];
$scope.getvalselected=[];
$scope.cycleMinDate = new Date();
$scope.startIn=0;
$scope.Range=[];
$scope.additionRange=[];
$scope.mealCourseName="";
$scope.dataPortion=[];
$scope.reAssign_MealTime="";
/*$scope.student_type = [{
 "id":1,
 "type":'Primary' 
},{
 "id":2,
 "type":'Secondary',

},{
 "id":3,
 "type":'Corporate',
  
}];*/




  $scope.opened = {};

  $scope.open = function($event, elementOpened) {
   
    $event.preventDefault();
    $event.stopPropagation();

    $scope.opened[elementOpened] = !$scope.opened[elementOpened];
  };

$scope.showIcon=[];

$scope.dateRange=[];

$http.get(PimURL+"/pimcore/api/FoodRecepie/categorywiserecipie"
).then(function(response){
  $scope.spinner=false;
  $scope.categories = response.data;

})


$scope.showTable=function(parentIndex,dataindex,index,recipe,category,data){
  var date=$scope.additionRange[index].toString();;
  $scope.dateRange[parentIndex][category][dataindex][date][0].tableShrink=!$scope.dateRange[parentIndex][category][dataindex][date][0].tableShrink;
}

$scope.multidropdown=function(){
   $scope.showIcon=[];
   
    $http.get(plannerURL+"/api/v1/categories")
        .then(function(response) {
            $scope.addRow=[];
            $scope.additionData=[];
            
            $scope.getAllCategories=[];
            //$scope.beforePush=[];

            $scope.mealtime = response.data;
            
  
            for(var i in $scope.mealtime){

              $scope.showIcon.push(false)
              var data=0;
              $scope.addRow.push([data]);
              //$scope.beforePush.push(i)
              $scope.getAllCategories.push($scope.mealtime[i].category_name)
              $scope.dateRange.push({[$scope.mealtime[i].category_name]:[]})
              $scope.additionData.push({[$scope.mealtime[i].category_name]:[]})
              
            }
            $scope.mealCourseName=$scope.mealtime[0].category_name;
            setTimeout(() => {
              jQuery('.selectpicker').selectpicker('refresh');
            }, 500);
            
            localStorage.setItem("menuassign",JSON.stringify($scope.additionData))
           
           
    })
}

$scope.ClientType=function(client,test){
  
    /*$scope.stud_type('Default');*/
  //$scope.getquantity=1; 
  $http.get(plannerURL+'/api/v1/client_type_categories?client_type_id='+client.id).then(function(res){
    $scope.clientID=client.id;
    $scope.clientType=client.name;
    $scope.student_type = res.data["client_categories"];
    $scope.SpreadName = res.data["Spread"]
    if(test=="hello"){
      var spreadName=$scope.SpreadName.filter(function(res){ //spread_name
       return res.spreadid==$scope.spreadID;
      }).map(function(res){
       return res.spreadtype
      })
      //console.log(spreadName)
      $scope.spread_name=spreadName[0] || "";

    
      var studentName=$scope.student_type.filter(function(res){ //studenType
       return res.id==$scope.studentID;
      }).map(function(res){
       return res.name

      });
      // console.log(studentName)
      $scope.studenType=studentName[0] || "";
      $scope.stud_type($scope.meal_ID)
    }else{

      //console.log($scope.student_type)
      $scope.studenType=$scope.student_type[0].name;
      $scope.studentID=$scope.student_type[0].id;
      
      $scope.spread_name=$scope.SpreadName[0].spreadtype;
      $scope.spreadID=$scope.SpreadName[0].spreadid;
    }
    /* $scope.studenType=$scope.student_type[0];*/
    


   });
    
}

$scope.onInit=function(){
  $scope.tenantPlanDetails();
  
  $http.get(plannerURL+'/api/v1/site_categories').then(function(res){
      $scope.clientList=res.data["client_types"];
      $scope.student_type = res.data["client_categories"]
      //console.log($scope.student_type)
      $scope.clientType=$scope.clientList[0].name;
      $scope.clientID=$scope.clientList[0].id;
     
/*     $scope.studenType = 3;
*/     /*if($scope.clientType=='Corporate'){
       $scope.student_type=[];
       $scope.studenType=null;
     }else{
      $scope.student_type = [{
                             "id":1,
                             "type":'Primary' 
                            },{
                             "id":2,
                             "type":'Secondary',

                            },{
                             "id":3,
                             "type":'Corporate',
                              
                            }];
      
     }*/

     $http.get(plannerURL+"/api/v1/all_food_categories").then(function(response){
      
      $scope.meal_type = response.data
      $scope.mealname= $scope.meal_type[0].name;
      $scope.mealId=$scope.meal_type[0].id;      
       
      $scope.ClientType($scope.clientList[0],"test");
      
      $http.get(plannerURL+'/api/v1/client_type_categories?client_type_id='+$scope.clientID).then(function(res){
         $scope.student_type = res.data["client_categories"]
         //console.log($scope.student_type)
         $scope.studenType=$scope.student_type[0].name;
         $scope.studentID=$scope.student_type[0].id;
        $scope.SpreadName = res.data["Spread"]
        $scope.spread_name=$scope.SpreadName[0].spreadtype;
        $scope.spreadID=$scope.SpreadName[0].spreadid;
        $scope.stud_type($scope.meal_type[0]);
       }); 
      
     });
     
  });

  /*$http.get(PimURL+"/pimcore/api/FoodRecepie/SpreadName"
    ).then(function(response){
      $scope.SpreadName = response.data["Spread"]
    $scope.SpreadName=[];

    for(var i=0;i<response.data.SpreadNames.length;i++){
     $scope.SpreadName.push({"id":i+1,"spreadtype":response.data.SpreadNames[i].spreadtype});
    }

    
    $scope.spread_name=$scope.SpreadName[0].spreadtype;

    $scope.tenantPlanDetails();
*/
    
   /*
    });*/
/*})
*/
   
}

/*$scope.getSelected=function(val,i){
  $scope.getvalselected[i]=val;
  var getval = $scope.getvalselected;
  if($scope.mealCourseName.length!=0){
   //for(var j in $scope.mealtime){
      for(var i=0; i < $scope.mealCourseName.length; i++){
       if(val==$scope.mealCourseName[j]){
         $scope.selected[i]=val;
       }else{
         $scope.selected[i]=' ';
       }
      }
   //}      
  }
}*/


// $scope.getSelected=function(val){
//   var meals = $scope.mealCourseName;
//   var select = $scope.selected;
//   var mealtime = $scope.mealtime[0];
//   var getval = $scope.getSelected;
//   if($scope.mealCourseName.length!=0){
//    //for(var j in $scope.mealtime){
//       for(var i=0; i < $scope.mealCourseName.length; i++){
//        if(val==$scope.mealCourseName[j]){
//          $scope.selected[i]=val;
//        }else{
//          $scope.selected[i]=' ';
//        }
//       }
//    //}      
//   } 
// }

// $scope.getSelected=function(val){
//   if($scope.mealCourseName.length!=0){
//    for(var i in $scope.mealCourseName){
//       if(val==$scope.mealCourseName[i]){
         
//          $scope.selected[i]=true;
//       }else{
         
//          $scope.selected[i]=false;
//       } 
//    }
      
//   }
// }

$scope.Remove=function(index,details){
    for(var i in $scope.dateRange){        
      for(var j in $scope.dateRange[i]){         
          angular.forEach($scope.dateRange[i], function(value, key) {
              if(key ==details){
                $scope.dateRange[i][key].splice(index, 1);
              }
          });              
      }
    }
}

$scope.stud_type=function(test){

//$scope.getquantity=1;
 var spread_ID=$scope.SpreadName.filter(function(res){
  return res.spreadtype==$scope.spread_name;
 }).map(function(res){
  return res.spreadid
 });
 
 $scope.spreadID=spread_ID[0] || "";


 var student_ID=$scope.student_type.filter(function(res){
  return res.name==$scope.studenType;
 }).map(function(res){
  return res.id
 });
 
 $scope.studentID=student_ID[0] || "";

 $scope.getMealValues=[];
 if(test != "Default"){    
    $scope.mealId=test.id;
 }

 /*if($scope.clientType=='Corporate'){
       $scope.student_type=[];
       $scope.studenType=null;
  }else{
       $scope.student_type = [{
                             "id":1,
                             "type":'Primary' 
                            },{
                             "id":2,
                             "type":'Secondary',

                            },{
                             "id":3,
                             "type":'Corporate',  
       }];
       if($scope.studenType==null){
        $scope.studenType=$scope.student_type[0].type;
       }
  }
*/

 /*if($scope.mealCourseName==undefined || $scope.mealCourseName==null){
  $scope.getMealValues=[];
 }else if($scope.mealCourseName.length!=0  ){
   $scope.getMealValues=$scope.mealCourseName.map(function(res){
   return res;
  }) 
 }else{
  $scope.getMealValues=[];
 }*/
 /*console.log($scope.getMealValues)
 console.log($scope.clientID,$scope.spread_name,$scope.studenType,$scope.mealId)*/
 $http.get(plannerURL+'/api/v1/tenant_details/student_filter?site_category_id='+$scope.clientID+'&&spread_type='+$scope.spreadID+'&&stud_type='+$scope.studentID+'&&food_category_id='+$scope.mealId+'&&meal_time='+$scope.mealCourseName).then(function(res){
   var data=res.data;
   $scope.tenant_list=[];
   if(data.length!=0){
   
     $scope.tenant_list=data.map(function(res){
       if($scope.tenantStatus==undefined){
        var data=-1
       }else{
        var data=$scope.tenantStatus.findIndex(m => m==res.tenant.id)
       }  
        if(data>-1){
          $scope.TenantState=true;
          $scope.tenantCheckStatus=true;
        }else{
          $scope.TenantState=false;
          $scope.tenantCheckStatus=false;
        }
       
       return {"id":res.tenant.id,"name":res.tenant.name,"checked":$scope.TenantState,"spread_type":res.spread_type,"stud_type":res.stud_type,"quantity":res.quantity}
       
     });

     //$scope.checkAssign();

   }else{
     $scope.tenant_list=[];
      $scope.tenantCheckStatus=false;
   }
  
   $scope.recipePush('test');
  });
}

$scope.reAssign=function(val){
 
  $http.get(plannerURL+'/api/v1/reassign_plan?sub_plan_id='+$scope.sub_plan_id+'&&tenant_detail_id='+$scope.tenantDetail_id)
  .then(function(res){
    var data = {
      "meal_time":val.category_name,
      "sub_plan_id":$scope.sub_plan_id,
      "tenantdetail_id": $scope.tenantDetail_id
    }
    alert(res.data.message)

    $scope.InitialLoad(data); 
  })
}

$scope.loadPrevious=function(){
  var validateDate = $scope.additionRange[0];
  var anotherDate = new Date();
  var filteredDate = $filter('date')(anotherDate, "dd-MM-yyyy");
 
  if(validateDate<=filteredDate && $scope.startIndex>0){
     if($scope.startIn>=1){
      $scope.startIn-=1; 
     }else{
      $scope.startIn=0
     }
     
     $scope.startIndex=$scope.startIn*$scope.no_of_days;
     
     var startWith = $scope.startIn+1;
     /*if($scope.endIndex>$scope.additionRange.length-1){
       $scope.endIndex=$scope.additionRange.length*startWith-1; 
     }else{*/
      $scope.endIndex=$scope.no_of_days*startWith-1; 
     /*}*/
     
     console.log($scope.startIndex,$scope.endIndex)
  }else{

        $scope.dateRangeDetails=[];
        var data;
        if($scope.additionRange[0]==undefined){
          var date=new Date();
          data = $filter('date')(date, "dd-MM-yyyy");
        }else{
          data=$scope.additionRange[0];  
        }

        $http.get(plannerURL+'/api/v1/menu_planners/previousdata?date='+data+'&sub_plan_id='+$scope.sub_plan_id+'&tenant_detail_id='+$scope.tenantDetail_id).then(function(res){
           var data=res.data;
           if(data.length!=0){
              if(data[0].current_status==false){
                $scope.menuAssignState=false;
              }else{
                $scope.menuAssignState=true;
              }
            
            // $scope.menuAssignState=true;
             $scope.dateRangeDetails=res.data[1].meal_details;
             $scope.clientID=res.data[1].tenant[0].site_category_id;
             $scope.clienTID=$scope.clientList.filter(function(res){
              return $scope.clientID==res.id;
             });

             $scope.callData();
           }else{
             alert("Data not available")
           }
           
        })
  }      
}

$scope.loadNext=function(){

  var validateDate = new Date($scope.additionRange[0].replace( /(\d{2})-(\d{2})-(\d{4})/, "$2/$1/$3"));
  var getvalidateDate=$filter('date')(validateDate, "yyyy-MM-dd");
  
  var anotherDate = new Date();
  var filteredDate = $filter('date')(anotherDate, "yyyy-MM-dd");
  
  var d1 = Date.parse(getvalidateDate);
  var d2 = Date.parse(filteredDate);
  
  
  if(d1>=d2){
   
     /*console.log($scope.startIndex)  
     console.log($scope.endIndex)  
     console.log($scope.startIn)
     console.log($scope.no_of_days) */
     
     
     if($scope.additionRange.length-1>$scope.endIndex){
       $scope.startIn+=1;     
       $scope.startIndex=$scope.no_of_days*$scope.startIn;
       var startWith = $scope.startIn+1;
       /*if($scope.endIndex>$scope.additionRange.length-1){
        $scope.endIndex=$scope.additionRange.length*startWith-1; 
       }else{*/
        $scope.endIndex=$scope.no_of_days*startWith-1;  
       /*}*/
       
     }else{
       alert("Data not available")
     } 
     
    
     
  }else{
  
    $scope.dateRangeDetails=[];
    $http.get(plannerURL+'/api/v1/menu_planners/nextdata?date='+$scope.additionRange[$scope.additionRange.length-1]+'&sub_plan_id='+$scope.sub_plan_id+'&tenant_detail_id='+$scope.tenantDetail_id).then(function(res){
    var data=res.data;
    if(data.length!=0){
    
      if(data[0].current_status==false){
        $scope.menuAssignState=false;
      }else{
        $scope.menuAssignState=true;
      }
      
      $scope.dateRangeDetails=res.data[1].meal_details;
      $scope.clientID=res.data[1].tenant[0].site_category_id;
      $scope.clienTID=$scope.clientList.filter(function(res){
       return $scope.clientID==res.id;
      })
      
      $scope.callData();
    }else{
       alert("Data not available")
    }

   })
  }
  
}

$scope.loadCurrent=function(){
  
  var data={
    "meal_time": $scope.reAssign_MealTime,
    "sub_plan_id": $scope.sub_plan_id,
    "tenantdetail_id": $scope.tenantDetail_id
  }

  $scope.InitialLoad(data)
}

$scope.InitialLoad=function(val){

 $scope.dataLoaded=false;
 $scope.tenantStatus=[];
 $scope.duplicateRange=[];
 $scope.addDuplicateRange=[];
 //$scope.addRow=[];
 //$scope.Range=[];
 //$scope.additionRange=[];

 $scope.reAssign_MealTime=val.meal_time;
 $scope.sub_plan_id=val.sub_plan_id;
 $scope.tenantDetail_id=val.tenantdetail_id;
 $http.get(plannerURL+"/api/v1/menu_planners/menu_planner_duplication?meal_time="+val.meal_time).then(function(res){
    $scope.optionvalue=res.data;
 });
 $http.get(plannerURL+'/api/v1/menu_planners/assigned_tenant_details?sub_plan_id='+val.sub_plan_id+'&&tenant_detail_id='+val.tenantdetail_id+'&&data=cycleplanner')
 .then(function(res){


   $scope.getEditdata=res.data;
   if($scope.getEditdata[0].current_status==false){
     $scope.menuAssignState=false;
   }else{
     $scope.menuAssignState=true;
   }
   
   $scope.tenant_quantity=$scope.getEditdata[1].tenant[0].quantity;
   
   $scope.date=res.data[1].tenant[0].date;
   $scope.studentID=res.data[1].tenant[0].stud_type; //studentID
   
   $scope.spreadID=res.data[1].tenant[0].spread_type; // spreadID
   
  
   $scope.meal_ID={"id":res.data[1].tenant[0].food_category_id}
   $scope.mealId=res.data[1].tenant[0].food_category_id
   $scope.dateRangeDetails=res.data[1].meal_details;
   $scope.planName=res.data[1].tenant[0].plan_name;
   $scope.expandableMealtime=res.data[1].tenant[0].meal_time;
   $scope.mealCourseName=res.data[1].tenant[0].meal_time
   
   setTimeout(() => {
     jQuery('.selectpicker').selectpicker('refresh');
   }, 500);
   
   $scope.clientID=res.data[1].tenant[0].site_category_id;
  // console.log($scope.clientID)
//console.log($scope.clientList)
   $scope.clienTID=$scope.clientList.filter(function(res){
     return $scope.clientID==res.id;
   })
  // console.log(clienTID)
   $scope.clientType=$scope.clienTID[0].name;

   
   var data=res.data[1].tenant[0].plan_for;
   $scope.no_of_days=res.data[1].tenant[0].plan_for;
   // for(var plan=1;plan<=data;plan++){
   //  $scope.Range.push('Day'+plan)
   // }

   $scope.startIndex=0;
   $scope.endIndex=$scope.no_of_days-1;
   $scope.startIn=0;
   
   for(var i in $scope.meal_type){
    if($scope.meal_type[i].id==$scope.meal_ID.id){
     
      $scope.mealname=$scope.meal_type[i].name
    }
   }
  /* for(var j in $scope.getEditdata){*/
    
    $scope.tenantStatus.push($scope.getEditdata[1]["tenant"][0].id);
   /*}*/
   $scope.compareAllMenuCycleData(); 
   $scope.callData();
          
  })
}

$scope.callData = function(){
        $scope.addRow=[];
        $scope.Range=[];
        $scope.getAllCategories=[];
        $scope.dateRange=[];
        $scope.additionRange=[]; 

        $scope.checkIndex=[];
        for(var i in $scope.dateRangeDetails){
         for(var j in $scope.dateRangeDetails[i]){
          $scope.checkIndex.push(j);
         }
        } 
        
        for(var i in $scope.mealtime){
 
          $scope.showIcon.push(false)
          var data=0;
          $scope.addRow.push([data]);

          $scope.getAllCategories.push($scope.mealtime[i].category_name)

        }

        for(var cat in $scope.getAllCategories){
         
          var state=false;
          var checkdata=true;
          var state1=true;
          for(var date in $scope.dateRangeDetails){
            

            for(var date1 in $scope.dateRangeDetails[date]){

               
               var data=[]
               state1=$scope.getAllCategories[cat]==date1
               
               if($scope.getAllCategories[cat]==date1){
                state=true;

                 data=$scope.dateRangeDetails[date][date1];

                 $scope.dateRange.push({[$scope.getAllCategories[cat]]:data});
                 break;
               }else{                

                checkdata=$scope.checkIndex.indexOf($scope.getAllCategories[cat])>-1;
                if(checkdata==false && state1==false){
                  continue;
                }
                
               
               }
               
            }
            
            if(state==true){      
              break;
            }     
           
          }

          if(state==false && checkdata==false && state1==false){
              $scope.dateRange.push({[$scope.getAllCategories[cat]]:[]})
              
          }

           
        }
      
      $scope.tempArray=[];
     
      for(var i in $scope.dateRange){
        
        for(var j in $scope.dateRange[i]){
       
          for(var k in $scope.dateRange[i][j]){
            //var indexAt=0;
            for(var l in $scope.dateRange[i][j][k]){
              
              //indexAt+=1
              //console.log(indexAt)
              var data=$scope.Range.indexOf(l)==-1;
              if(data==true){
                $scope.Range.push(l.toString());
                $scope.additionRange.push(l.toString());
              }
              
               for(var m in $scope.dateRange[i][j][k][l]){
                
                   $scope.loopbreak=true;
                  
                   for(var n=0;n<$scope.categories.RecepieCategoryWise.length;n++){
                     
                    for(var y in $scope.categories.RecepieCategoryWise[n]){
                     
                      for(var o in $scope.categories.RecepieCategoryWise[n].Foodrecipielist){
                        ///console.log($scope.dateRange[i][j][k][l])
                        //console.log($scope.dateRange[i][j][k][l][m])
                       if($scope.categories.RecepieCategoryWise[n].Foodrecipielist[o].RecepieName==$scope.dateRange[i][j][k][l][m].name){
                       // alert($scope.categories)
                         
                        // if(m!=0){
                          
                        //   if($scope.dateRange[i][j][k][l].length>1){
                         
                          
                           $scope.dateRange[i][j][k][l][m].dependant=$scope.categories.RecepieCategoryWise[n].FoodCategory;
                           $scope.dateRange[i][j][k][l][m].qty=0;
                           $scope.dateRange[i][j][k][l][m].Portion_size=0;
                           $scope.dateRange[i][j][k][l][m].UOM="";
                           $scope.dateRange[i][j][k][l][m].tableShrink=true;
                          // if(m==$scope.dateRange[i][j].length){
                            
                           
                          //   var push={
                          //     [l] : [$scope.dateRange[i][j][k][l][m]]
                          //   };
                            
                          //   $scope.dateRange[i][j].push(push);
                            
                          //   $scope.dateRange[i][j][k][l].splice([m],1)
                            
                          //   $scope.loopbreak=false;
                            
                            
                            
                          // }else{
                          //   console.log(l)
                          //    $scope.getDataValue= $scope.dateRange[i][j][k][l][m]
                          //    console.log($scope.getDataValue)
                          //    console.log($scope.dateRange[i][j][0][l])
                          //    console.log($scope.dateRange[i][j][0][l][m])
                             //console.log($scope.dateRange[i][j][$scope.dateRange[i][j].length-1]["Day2"])
                      //        $scope.dateRange[i][j][$scope.dateRange[i][j].length-1][l]=[$scope.dateRange[i][j][k][l][m]];
                      //        console.log($scope.dateRange[i][j][$scope.dateRange[i][j].length-1][l])
                      //        //$scope.dateRange[i][j][$scope.dateRange[i][j].length-1][l].push($scope.getDataValue);
                              
                      //        $scope.dateRange[i][j][k][l].splice([m],1)
                           
                      //        $scope.loopbreak=false;
                             
                      //     }

                      //     }
                      // }else{
                       
                      //   $scope.dateRange[i][j][k][l][m].dependant=$scope.categories.RecepieCategoryWise[n].FoodCategory
                      //  }
                         
                       }
                        if($scope.loopbreak==false){
                          break;
                        }
                       
                      }
                      if($scope.loopbreak==false){
                          break;
                        }
                    }
                   if($scope.loopbreak==false){
                          break;
                        }
                   }
                 
                
               }

            }
          }
        }
      }

      for(var i=0;i<$scope.dateRange.length;i++){
        
          for(var j in $scope.dateRange[i]){
            
            for(k in $scope.dateRange[i][j]){
              
              if(k!=0){
                 $scope.addRow[i].push(Number(k));
              }
            }
            break;
          }
      }
      
      
      var getDate1 = new Date();
      var filter1 = $filter('date')(getDate1, "yyyy-MM-dd");
      
      var check1 = filter1.split("-");

      var date1 = new Date(check1[0],check1[1]-1,check1[2],0,0,0);
     
      var check2 = $scope.additionRange[$scope.additionRange.length-1];
      
      //var filter2 = check2.split("-").reverse().join("-");
      var filter2 = check2.split("-");

     // var filter2 = $filter('date')(newdate, "MM-dd-yyyy");
      
      var date2 = new Date(filter2[2],filter2[1]-1,filter2[0],0,0,0)
      
      if(date2 == "Invalid Date"){
        $scope.comparedDate=false;
        $scope.showHistory=false;
      }else{
        $scope.showHistory=true; 
        var timeDiff = Math.abs(date2.getTime() - date1.getTime());
        var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24)); 
        
        var comp1 = moment(filter1);
        
        var comp2 = moment(filter2);
        
        var comparedDate = comp1.isSameOrAfter(comp2)
        
        if(diffDays<=7){
          $scope.comparedDate=true;
        }else if(diffDays>7){
          $scope.comparedDate=true;
        }else{  
          $scope.comparedDate=false;
        }
        if(date1>date2){
          $scope.getDisabledData=true;
        }else{
          $scope.getDisabledData=false;
        }
      }
     
     
      
      //$scope.stud_type($scope.meal_ID);
      $scope.ClientType($scope.clienTID[0],"hello")
      $scope.dataLoaded=true;
}

$scope.dropDown1=function(test){
 
   
   if($scope.categories==undefined){
     

      for(var i in $scope.categories.RecepieCategoryWise){

        if($scope.categories.RecepieCategoryWise[i].FoodCategory==test[0].dependant){
           $scope.categories.RecepieCategoryWise[i];
        }
      }
   }else{
      
      for(var i in $scope.categories.RecepieCategoryWise){
        if($scope.categories.RecepieCategoryWise[i].FoodCategory==test[0].dependant){
          return $scope.categories.RecepieCategoryWise[i];
        }
      }
     
   }
  
}



  $scope.checkName=function(data,index){
   
    if(data!=null && data!=undefined && data!=""){
      var compare_date=""
      var compare_date_state=0
      if(index!=0){
       compare_date = new Date($scope.Range[index-1].replace( /(\d{2})-(\d{2})-(\d{4})/, "$2/$1/$3"))
      }else{
       compare_date = new Date(data);
       compare_date.setDate(compare_date.getDate() - 1)
      }
     // console.log(compare_date)
      if(compare_date<data  || compare_date=="Invalid Date"){
            $scope.addRange=[];
            var calc= new Date(data)
            var assign_previous="";
            for(var j=0;j<$scope.Range.length;j++){
              //console.log(j,index)
              if(j==index){
                calc= new Date(data)
               //console.log(calc)
              }else if(j<index){
                //console.log($scope.Range[j])
                //console.log(new Date($scope.Range[j]))
                /*var valid_date=""
                if($scope.Range[j].includes('Day')==true){
                  valid_date=$scope.Range[j];
                }else{
                  var date_field= $scope.Range[j].replace('-','/');
                  valid_date=date_field;
                }
               console.log(valid_date)*/
               //console.log(new Date($scope.Range[j].replace( /(\d{2})-(\d{2})-(\d{4})/, "$2/$1/$3"))=="Invalid Date") 
                if(new Date($scope.Range[j].replace( /(\d{2})-(\d{2})-(\d{4})/, "$2/$1/$3"))=="Invalid Date"){
                  calc= new Date(data)
                  calc.setDate(calc.getDate() +(parseInt(j)-parseInt(index)));
                //console.log(calc)
                  var previous=$filter('date')(calc, "dd-MM-yyyy");
                  assign_previous=previous;
                  //console.log(assign_previous)
                }else{
                  assign_previous=$scope.Range[j];
                  //console.log(assign_previous)
                }
              }else{
                calc.setDate(calc.getDate() + 1);
                //console.log(calc)
              }
              if(j<index){
                var assign_date=assign_previous;
                //console.log(assign_date)
              }else{
                var assign_date=$filter('date')(calc, "dd-MM-yyyy");
                //console.log(assign_date)  
              }
              
              $scope.addRange[j]=assign_date;
            } 
           
            $scope.Range=$scope.addRange;
            
      }else{
        alert("Selected date should be maximum than previous date")
      }
       
    }else{
      
      /*$scope.addRange=[];
      for(var i=0;i<=$scope.additionRange.length;i++){
        $scope.additionRange.push($scope.additionRange[i])
      }  
      $scope.Range=$scope.addRange;*/
    }
    
  }

 $scope.dropDown2=function(test,test1){
  

   
   if($scope.categories==undefined){
     

      for(var i in test1){
        if(test1[i].RecepieName==test[0].name){
          
          return test1[i];
        }
      }
   }else{
    
      for(var i in test1){
        if(test1[i].RecepieName==test[0].name){
          
           return test1[i];
        }
      }
     
   }
  
 }

  $scope.toggleAll = function(index,category,day,boolean) {
   
    for(var i in $scope.dateRange[index][category]){
    
      
      $scope.dateRange[index][category][i][day][0].rowSelect=boolean;
      $scope.dateRange[index][category][i][day][0].CheckAll=boolean;
    }
  }


  $scope.optionToggled = function(index,category,day,boolean){
   
    var date=$scope.additionRange[day].toString();
   
    for(var i in $scope.dateRange[index][category]){
      if(boolean==false){
       
        $scope.dateRange[index][category][i][date][0].CheckAll=boolean;
      
      }
    }
   
    /*$scope.isAllSelected = $scope.options.every(function(itm){ return itm.selected; })*/
  }
 
  
  $scope.checkTenantUpdate=function(test,test1,index){
    //console.log(test,test1)
   // console.log($scope.getTenants[test1]["tenant"])
    $scope.getquantity=0;
    for(var i = 0; i < $scope.getTenants[test1]["tenant"].length; i++){
       if($scope.getTenants[test1]["tenant"][i].assign==true){
         var product = $scope.getTenants[test1]["tenant"][i].quantity;
         
         $scope.getquantity += product;
         
       } 
        
    }
    if($scope.getquantity==0){
      $scope.getquantity=1;
    }

  }

   /*$scope.checkTenantUpdate=function(test,test1,index){
    
    $scope.getquantity=0;
    for(var i = 0; i < $scope.getTenants[test1]["tenant"].length; i++){
       if($scope.getTenants[test1]["tenant"][i].assign==true){
         var product = $scope.getTenants[test1]["tenant"][i].quantity;
         $scope.getquantity += product;
      
       } 
        
    }
    if($scope.getquantity==0){
      $scope.getquantity=1;
    }

  }*/

  $scope.showClickIcon=function(index){

    /*for(var i=0;i<$scope.showIcon.length;i++){
      if(i==index){*/
        
         
         $scope.showIcon[index]==false? $scope.showIcon[index]=true:$scope.showIcon[index]=false;
        
  /*    }
    }*/
  }


  $scope.rowAdd=function(index,categoryName){

    
     for(var i=0;i<$scope.addRow.length;i++){ 
        if(i==index){
          
              if($scope.dateRange[index][categoryName].length>=1){
                $scope.addRow[i].push($scope.addRow[i].length)
              }
        
        }
     }
    
    for(var i in $scope.dateRange){
     
     for(var l in $scope.dateRange[i]){
         
        if(l==categoryName){
             var dayValue=[];
            if($scope.additionRange.length!=0){
               for(var j in $scope.additionRange){
                //var day = 'Day'+''+d.toString();
                var day=$scope.additionRange[j].toString();

                var boolean=false;
                if($scope.dateRange[i][l].length!=0){
                  if($scope.dateRange[i][l][0][day][0].CheckAll==true){
                    boolean=true
                  }else{
                    bolean=false;
                  }
                }else{
                  boolean=false;
                }

                var data={
                        [day] : [{"name":'',"qty":0,"dependant":'',"rowSelect":boolean,"CheckAll":boolean,"Portion_size":0,"UOM":"","tableShrink":false}]
                       };
               if(dayValue.length==0){ 
                dayValue=[data]
                }else{
                  dayValue[0][day]=[{"name":'',"qty":0,"dependant":'',"rowSelect":boolean,"CheckAll":boolean,"Portion_size":0,"UOM":"","tableShrink":false}]
                }
              }
              $scope.dateRange[i][l].push(dayValue[0]);
            }
             
        }else{

          var data=$scope.dateRange.findIndex((m,index) => m[categoryName])
          if(data==-1){
              var dayValue=[];
            if($scope.additionRange.length!=0){
              for(var j in $scope.additionRange){
                //var day = 'Day'+''+d.toString();
                var day=$scope.additionRange[j].toString();

                var boolean=false;
                if($scope.dateRange[i][l].length!=0){
                  if($scope.dateRange[i][l][0][day][0].CheckAll==true){
                    boolean=true
                  }else{
                    bolean=false;
                  }
                }else{
                  boolean=false;
                }

                var data={
                        [day] :  [{"name":'',"qty":0,"dependant":'',"rowSelect":boolean,"CheckAll":boolean,"Portion_size":0,"UOM":"","tableShrink":false}]
                       };
               if(dayValue.length==0){ 
                dayValue=[data]
                }else{
                  dayValue[0][day] = [{"name":'',"qty":0,"dependant":'',"rowSelect":boolean,"CheckAll":boolean,"Portion_size":0,"UOM":"","tableShrink":false}]
                }
              }
              
              $scope.dateRange.push({[categoryName]:dayValue}); 
            }  
          }
            
        }
     } 
       
    }
  }

  $scope.checkAssign=function(){
    $scope.tenant_list.some(checked);
    function checked(check){
      return check.checked==true
    }
    $scope.tenantCheckStatus=$scope.tenant_list.some(checked);
  }

  $scope.dataSplitPortion="";

 $scope.recipePush=function(parentIndex,parentindex,index,recipe,categoryName,date){
   var datefield=$scope.additionRange[date-1];
  
  if(parentIndex!='test'){
    for(var i in $scope.dateRange){
      for(var j in $scope.dateRange[i]){
       
    
        if(j==categoryName){
         
            for(var a in $scope.categories.RecepieCategoryWise){
             for(var b in $scope.categories.RecepieCategoryWise[a]){
              for(var k in $scope.categories.RecepieCategoryWise[a][b]){
              
                 if(recipe==null || recipe==undefined || recipe==""){
                  var dayNum=datefield;

                   
                   $scope.dateRange[i][j][parentindex][dayNum][0].name="";
                   $scope.dateRange[i][j][parentindex][dayNum][0].qty=0;
                   $scope.dateRange[i][j][parentindex][dayNum][0].dependant="";
                   $scope.dateRange[i][j][parentindex][dayNum][0].Portion_size=0;
                   $scope.dateRange[i][j][parentindex][dayNum][0].UOM="";
                   $scope.dateRange[i][j][parentindex][dayNum][0].tableShrink=false;
                 }else{
                  var dayNum=datefield;
                  if($scope.categories.RecepieCategoryWise[a][b][k].RecepieName==recipe.RecepieName){
                  
                    $scope.dateRange[i][j][parentindex][dayNum][0].name=recipe.RecepieName;
                    $scope.dateRange[i][j][parentindex][dayNum][0].tableShrink=true;
                    $scope.dateRange[i][j][parentindex][dayNum][0].dependant=$scope.categories.RecepieCategoryWise[a].FoodCategory

                    for(var l in $scope.categories.RecepieCategoryWise[a][b][k].SpreadMaster){
                      
                      // for(var m in $scope.categories.RecepieCategoryWise[a][b][k][l]){
                          $scope.dataPortion=$scope.categories.RecepieCategoryWise[a][b][k].SpreadMaster[l].Portion_size.split(" ")
                          if($scope.categories.RecepieCategoryWise[a][b][k].SpreadMaster[l].clienttype==$scope.studenType && $scope.categories.RecepieCategoryWise[a][b][k].SpreadMaster[l].spreadtype==$scope.spread_name){
                            

                             // var quantity=0;
                             // if($scope.tenant_quantity!=null){
                             //   quantity =$scope.tenant_quantity
                             // }
                             
                            
                             //$scope.dataSplitPortion=$scope.categories.RecepieCategoryWise[a][b][k].SpreadMaster[l].Portion_size;
                             //$scope.dataPortion =$scope.dataSplitPortion.split(" ");
                             
                             $scope.dateRange[i][j][parentindex][dayNum][0].qty=$scope.categories.RecepieCategoryWise[a][b][k].SpreadMaster[l].Portion_size;

                            //$scope.dateRange[i][j][parentindex][dayNum][0].Portion_size=(dataPortion[0]*quantity).toFixed(2);
                            $scope.dateRange[i][j][parentindex][dayNum][0].Portion_size=$scope.dataPortion[0];
                            $scope.dateRange[i][j][parentindex][dayNum][0].UOM=$scope.dataPortion[1];

                          }else{
                            $scope.dateRange[i][j][parentindex][dayNum][0].qty=0;
                            $scope.dateRange[i][j][parentindex][dayNum][0].Portion_size=0;
                            $scope.dateRange[i][j][parentindex][dayNum][0].UOM="";
                          }

                      // }
                      
                    }
                    

                  }  
                 
                 } 
              } 
            }
           }
        }
      }
   
    }
$scope.stud_type('Default');

  }else{
 
  for(var i in $scope.dateRange){      
    
    for(var j in $scope.dateRange[i]){
      
      for(var k in $scope.dateRange[i][j]){
       
       for(var l in $scope.dateRange[i][j][k]){

        for(var m in $scope.dateRange[i][j][k][l]){
        
          if($scope.dateRange[i][j][k][l][m].name==""){
            
          }else{
          
            if($scope.dateRange[i][j][k][l][m].name!=""){
            
              for(var a in $scope.categories.RecepieCategoryWise){
               for(var b in $scope.categories.RecepieCategoryWise[a]){
                for(var c in $scope.categories.RecepieCategoryWise[a][b]){
                   
                  if($scope.categories.RecepieCategoryWise[a][b][c].RecepieName==$scope.dateRange[i][j][k][l][m].name){
                    $scope.dateRange[i][j][k][l][m].tableShrink=true;
                    for(var d in $scope.categories.RecepieCategoryWise[a][b][c].SpreadMaster){
                      
                     

                      if($scope.categories.RecepieCategoryWise[a][b][c].SpreadMaster[d].clienttype==$scope.studenType && $scope.categories.RecepieCategoryWise[a][b][c].SpreadMaster[d].spreadtype==$scope.spread_name){
                       
                         var quantity=0;
                         if($scope.tenant_quantity!=null){
                          quantity =$scope.tenant_quantity
                         }

                        
                       // $scope.dataSplitPortion=$scope.categories.RecepieCategoryWise[a][b][c].SpreadMaster[d].Portion_size;
                        $scope.dataPortion = $scope.categories.RecepieCategoryWise[a][b][c].SpreadMaster[d].Portion_size.split(" "); 
                        
                        $scope.dateRange[i][j][k][l][m].qty=$scope.categories.RecepieCategoryWise[a][b][c].SpreadMaster[d].Portion_size;

                        //$scope.dateRange[i][j][k][l][m].Portion_size=(dataPortion[0]*quantity).toFixed(2);
                        $scope.dateRange[i][j][k][l][m].Portion_size=$scope.dataPortion[0];
                        $scope.dateRange[i][j][k][l][m].UOM=$scope.dataPortion[1];
                       
                        break;
                      }else{
                       
                        $scope.dateRange[i][j][k][l][m].qty=0;
                        $scope.dateRange[i][j][k][l][m].Portion_size=0;
                        $scope.dateRange[i][j][k][l][m].UOM="";
                        
                      }
                    }
                  }
                }
               }
              }  
            }

          }
        }
       }
      }
    }
  } 
  }  
  
}

 $scope.tenantPlanDetails=function(){
   $http.get(plannerURL+"/api/v1/menu_planners/menu_cycle_count_details").then(function(response){
     $scope.planned_count = response.data[0];

   });
 }

 $scope.duplication=function(val){
  if(val!=undefined){
    $scope.addDuplicateRange=[];
   //$scope.dataLoaded=false;
   $scope.duplicateRange=[];
   $scope.subdata=val;
   $http.get(plannerURL+'/api/v1/menu_planners/assigned_tenant_details?sub_plan_id='+val.sub_plan_id+'&&tenant_detail_id='+val.tenantdetail_id+'&&data=cycleplanner').then(function(res){
     $scope.dropdownData = res.data;
     var mealCourse=$scope.reAssign_MealTime.toString();
     $scope.duplicateData = res.data[1]["meal_details"][0][mealCourse];
     
     var data=$scope.dropdownData[1];
     //var date=[]
     for(var i=0;i<data["meal_details"].length;i++){
       
       
       for(var j=0;j<data["meal_details"][i][mealCourse].length;j++){
        // console.log(data["meal_details"][i][mealCourse][j])
         for(var k in data["meal_details"][i][mealCourse][j]){
          $scope.duplicateRange.push(k.toString());
           /*for(var m in data["meal_details"][i][j][k]){
             
           }
             
             var initiate=1;

            
             for(var l=initiate;l<=data["tenant"][0]["plan_for"];l++){
              
              var day = 'Day'+''+l.toString();
              if(data.length!=initiate-1){
                date.push(data["meal_details"][i][j][k][day]);  
              }
              
             }
*/
         }
       }
     }

   }) 
  }

 }

 function extend(obj, src) {
    for (var key in src) {
        if (src.hasOwnProperty(key)) obj[key] = src[key];
    }
    return obj;
 }

 $scope.duplicateitems=function(val,date,food){
  if($scope.duplicateValue=="" || $scope.duplicateValue==undefined || $scope.duplicateValue==null){
    return alert("Please select the plan name")
  }
   var data=$scope.dropdownData[1];

   compare_date = new Date($scope.additionRange[$scope.additionRange.length-1].replace( /(\d{2})-(\d{2})-(\d{4})/, "$2/$1/$3"))
     for(var Fordate=0;Fordate<data["tenant"][0]["plan_for"];Fordate++){
       
       var addition=1;
       
       compare_date.setDate(compare_date.getDate() + addition)
       
       var getdate=$filter('date')(compare_date, "dd-MM-yyyy");
       $scope.addDuplicateRange.push(getdate);
       $scope.additionRange.push(getdate);
       $scope.Range.push(getdate);
     }
     
     $scope.duplicateData = JSON.stringify($scope.duplicateData);
     for(var add in  $scope.addDuplicateRange){
       
       var str=$scope.duplicateRange[add];
       
       var regExp = new RegExp(str,'g');
      
       $scope.duplicateData = $scope.duplicateData.replace(regExp, $scope.addDuplicateRange[add]);
       
     }

     $scope.duplicateData = JSON.parse($scope.duplicateData);
     
     var mealCourse=$scope.reAssign_MealTime.toString();
     for(var date=0;date<$scope.dateRange.length;date++){
      
      
      for(var date1 in $scope.dateRange[date]){
      
      
      
       if(date1==mealCourse){
        
         for(var date2=0;date2<$scope.dateRange[date][date1].length;date2++){
          
           //if($scope.dateRange[date][date1].length==$scope.duplicateData.length){
             
           //}else
           if($scope.dateRange[date][date1].length>$scope.duplicateData.length){
              var dayValue=[];
              if($scope.additionRange.length!=0){
                
                
                 for(var k in $scope.additionRange){
                 
                 
                  var day=$scope.additionRange[k].toString();
                 
                  var boolean=false;
                  if($scope.dateRange[date][date1].length!=0){
                    
                    if(day!=undefined && $scope.dateRange[date][date1][0][day]!=undefined){
                      if($scope.dateRange[date][date1][0][day][0].CheckAll==true){
                        boolean=true
                      }else{
                        bolean=false;
                      }
                    }
                    
                  }else{
                    boolean=false;
                  }
                
                var count=date2+1;
                
                if(count>$scope.duplicateData.length){
                  var data={
                          [day] : [{"name":'',"qty":0,"dependant":'',"rowSelect":boolean,"CheckAll":boolean,"Portion_size":0,"UOM":"","tableShrink":false}]
                         };
                 if(dayValue.length==0){
                  dayValue=[data]
                  }else{
                    dayValue[0][day]=[{"name":'',"qty":0,"dependant":'',"rowSelect":boolean,"CheckAll":boolean,"Portion_size":0,"UOM":"","tableShrink":false}]
                  }
                }
                  
                  
                }
                console.log(dayValue)
                if(dayValue.length!=0){
                  $scope.duplicateData.push(dayValue[0])
                }
        
              } 
           }else if($scope.dateRange[date][date1].length<$scope.duplicateData.length){
             
             $scope.addRow[date].push($scope.addRow[date].length)
           
           /*  for(var i in $scope.dateRange){
     
       for(var l in $scope.dateRange[i]){*/
              
         
              var dayValue=[];
              if($scope.additionRange.length!=0){
                 for(var j in $scope.additionRange){
                 
                 
                  var day=$scope.additionRange[j].toString();
                 // console.log(day) 
                  var boolean=false;
                  if($scope.dateRange[date][date1].length!=0){
                    //console.log($scope.additionRange)
                    //console.log($scope.dateRange[date][date1][0])
                    //console.log($scope.dateRange[date][date1][0][day])
                    if(day!=undefined && $scope.dateRange[date][date1][0][day]!=undefined){
                      if($scope.dateRange[date][date1][0][day][0].CheckAll==true){
                        boolean=true
                      }else{
                        bolean=false;
                      }
                    }
                    
                  }else{
                    boolean=false;
                  }

                  var data={
                          [day] : [{"name":'',"qty":0,"dependant":'',"rowSelect":boolean,"CheckAll":boolean,"Portion_size":0,"UOM":"","tableShrink":false}]
                         };
                 if(dayValue.length==0){ 
                  dayValue=[data]
                  }else{
                    dayValue[0][day]=[{"name":'',"qty":0,"dependant":'',"rowSelect":boolean,"CheckAll":boolean,"Portion_size":0,"UOM":"","tableShrink":false}]
                  }
                }
                $scope.dateRange[date][date1].push(dayValue[0]);
        
              }
          }
           /*var data=$scope.dateRange[date][date1][date2];
          
           var a = $scope.dateRange[date][date1][date2], b = $scope.duplicateData[date2];
          // console.log(b)
           /*if(b==undefined && date2>0){
             b=$scope.duplicateData[date2-1];
           }*/
           var c = extend(a, b);
           $scope.dateRange[date][date1][date2]=c;

           /*$scope.dateRange=$scope.dateRange[date][date1].concat($scope.duplicateData)*/
         }
       }
      }


      
     }
     
     alert("Selected Plan has been duplicated");
     

 }


 $scope.assignedTenants=function(){
  $scope.getTenants=[];
  $http.get(plannerURL+"/api/v1/menu_planners/menuplanner_tenants?plan_name="+$scope.planName).then(function(res){
    var data=res.data;
    //$scope.getTenants=res.data;
    /*$scope.getTenants=data.map(function(res){
      return {"sub_plan_name":res.sub.sub_plan_name,"checked":false,"tenant":res.tenant}
    });*/
    for(var i=0;i<data.length;i++){
      for(var j=0;j<data[i].tenant.length;j++){
       
        data[i].tenant[j].assign=false;
      }
    }
    
    $scope.getTenants=data;
    $scope.plan_id= $scope.getTenants[0].plan_id;
  })
 }




 //$scope.spinner=false;

 /*$scope.menuAssign=function(){
  if($scope.Range[0] == 'Day1'){
      alert("please select the date")
  }else{
    $scope.finall_dataRange="";
    $scope.getTenant=$scope.tenant_list.filter(function(res){
      return res.checked;
    }).map(function(res){
      return {"id":res.id,"stud_type":res.stud_type,"spread_type":res.spread_type,"plan_name":$scope.planName,"date":$scope.date, "food_category_id": $scope.mealId, "plan_for": $scope.no_of_days}
    });
    

       $scope.dateRange = JSON.stringify($scope.dateRange);
    for(var i=0;i<$scope.additionRange.length;i++){
      var str=$scope.additionRange[i];
      var regExp = new RegExp(str,'g');
      $scope.dateRange = $scope.dateRange.replace(regExp, $scope.Range[i]);
    }
    $scope.dateRange= JSON.parse($scope.dateRange);
    
    localStorage.setItem("dataRange",JSON.stringify($scope.dateRange));
    $scope.finall_dataRange=JSON.parse(localStorage.getItem("dataRange"))

    for(var h in $scope.Range){
      for(var j in $scope.finall_dataRange){
        for(var k in $scope.finall_dataRange[j]){
          for(var l in $scope.finall_dataRange[j][k]){
               if(l>0){   
               
                   $scope.finall_dataRange[j][k][0][$scope.Range[h]].push($scope.finall_dataRange[j][k][l][$scope.Range[h]][0]);
                   delete $scope.finall_dataRange[j][k][l][$scope.Range[h]];          
               }
          }
        }  
      }
    }


    // var allData=[];
    // for(var i in $scope.getAlldata){
    //   allData.push({[i]:$scope.getAlldata[i]})
    // }


    var data={"data":[{"tenant":$scope.getTenant},{"meal_details":$scope.finall_dataRange}]}

             console.log(data)

    $http.post(plannerURL+"/api/v1/menu_planners/create_menu_cycle",data).then(function(res){
      console.log(res.data);
      // $scope.menu_plan_name="";
      // $scope.menu_assign_date="";
      // $scope.no_of_days="";
      //location.href="/normalmenu_sites/menu_cycle";
    })
  }
}*/

$scope.openModal=function(){
   $scope.duplicateValue="";
}


$scope.createADNPlan=function(){
  if($scope.NewPlanName!=undefined && $scope.NewPlanName!=null && $scope.NewPlanName!=""){
     $http.get(plannerURL+'/api/v1/menu_planners/menu_planner_duplication_test?id='+$scope.plan_id+'&&name='+$scope.NewPlanName).then(function(res){
        var data=res.data;
        $scope.NewPlanName="";
        if(data["status"]==true){
          alert("Full plan has been duplicated")
        }else{
          alert("Same Plan name exists")
        }
     },function(error){
        alert("Failed to duplicate the full plan")
     })
  }else{
    alert("Please enter the New Plan name");
  }
}

$scope.updateTenant= async function(list,index){
    $scope.spinner=true;
    var tenant_list=[];
  
    var mealCoursedata=$scope.mealCourseName.toString();
    tenant_list=list.filter(function(res){
      return res.assign
    }).map(function(res){
      return {"stud_type":$scope.studentID,"spread_type":$scope.spreadID,"plan_name":$scope.planName,"date":$scope.date, "food_category_id": $scope.mealId, "plan_for": $scope.no_of_days, "site_category_id": $scope.clientID,"meal_time": mealCoursedata,"sub_plan_id":res.sub_plan_id,"tenant_detail_id":res.tenantdetail_id}
    })
    
    if(tenant_list.length!=0){
        var data=[];
              
        
        let checkTmpObj = await $scope.awaitFunction();
        let tmpObj = $scope.tmpObj;
        data=JSON.parse(localStorage.getItem("menuassign"));
        
          for(var j in tmpObj){

            for(var k in tmpObj[j]){
              
              for(var l in tmpObj[j][k]){
               for(var m in tmpObj[j][k][l]){
                   
                   

                    if(k==$scope.mealCourseName){
                     
                      if(data[j][k].length==0){
                       data[j][k]=[tmpObj[j][k][0]]  
                      }else{
                       if(l!=0){
                         if(tmpObj[j][k].length!=data[j][k][0][m].length){
                           data[j][k][0][m].push(tmpObj[j][k][l][m][0]);  
                         }
                       } 
                      }
                      
                    }else{

                    } 
                  
               }
              }
              
              
            }
            if(j==tmpObj.length-1){
              $scope.callUpdateTenantApi(tenant_list,data) 
            }
          }
       console.log(tmpObj)
    }else{
     $scope.spinner=false;
     alert("Please select client before update");
    }
  }

  $scope.awaitFunction=function(){
    $scope.tmpObj = []

        for (let [index, ranges] of $scope.dateRange.entries()) {
          
          //$scope.tmpObj = $scope.tmpObj || []
          
          for (let obj1 of Object.keys(ranges)) {
            $scope.tmpObj.push({
                [obj1]: ranges[obj1]
              })
            if (obj1 === $scope.mealCourseName) {
              
             
              for (let rangeindex in ranges[$scope.mealCourseName]) {
               
                for (let [dayindex, obj2] of Object.keys(ranges[$scope.mealCourseName][rangeindex]).entries()) {
                  
                  if(obj2.includes('Day')==true && $scope.Range[dayindex].includes('Day')==true){
                   
                    $scope.tmpObj[index][$scope.mealCourseName][rangeindex][obj2]= ranges[$scope.mealCourseName][rangeindex][obj2] || [];
                  }else if(obj2.includes('Day')==true && $scope.Range[dayindex].includes('Day')==false){
                    $scope.tmpObj[index][$scope.mealCourseName][rangeindex][`${$scope.Range[dayindex]},${$scope.Range[dayindex]}`] = ranges[$scope.mealCourseName][rangeindex][obj2] || [];
                    delete $scope.tmpObj[index][$scope.mealCourseName][rangeindex][obj2];
                  }else{
                    $scope.tmpObj[index][$scope.mealCourseName][rangeindex][`${$scope.additionRange[dayindex]},${$scope.Range[dayindex]}`] = ranges[$scope.mealCourseName][rangeindex][obj2] || [];
                    delete $scope.tmpObj[index][$scope.mealCourseName][rangeindex][obj2];
                  }  
                }    
              }
            }
          }
        }
   
  }

  $scope.callUpdateTenantApi=function(tenant_list,data){
          var assign={"data":[{"tenant":tenant_list},{"meal_details":data}]};
          
          $http.post(plannerURL+"/api/v1/menu_planners/create_menu_cycle",assign).then(function(res){
              // $scope.menu_plan_name="";
              // $scope.menu_assign_date="";
              // $scope.no_of_days="";
              //location.href="/normalmenu_sites/menu_cycle";
              if(res.data==true){
                $scope.spinner=false;
                alert('Your Menu has updated');
                $scope.dateRange=[];
                $scope.additionRange=[];
                $scope.Range=[];
                $scope.assignedTenants();
                $scope.tenantPlanDetails();
                //$scope.onInit();
                $scope.multidropdown();
              }else{
                $scope.spinner=false;
                $scope.dateRange=[];
                $scope.additionRange=[];
                $scope.Range=[];
                alert('Failed to update the Menu');
              }

          },function(error){
            $scope.spinner=false;
            $scope.dateRange=[];
            $scope.additionRange=[];
            $scope.Range=[];
            alert('Failed to connect the server');
          })
  }
 
 $scope.compareAllMenuCycleData=function(){
  
   $http.get(plannerURL+'/api/v1/menu_planners/menu_cycle_update?sub_plan_id='+$scope.sub_plan_id+'&&tenant_detail_id='+$scope.tenantDetail_id+'&&data=cycleplanner').then(function(res){
     $scope.allMenuCycleData=res.data;
     $scope.menuCycleExtractData=[];
     
     if($scope.allMenuCycleData.length!=0){
      $scope.menuCycleExtractData=$scope.allMenuCycleData[0].meal_details; 
     }else{
      $scope.menuCycleExtractData=[];
     }
   }) 
 }
 

})



app.directive('draggable', function() {
  return function(scope, element, attrs) {
    var el = element[0];
    el.draggable = true; // Make dragable

    // Add event listeners
    el.addEventListener(
      'dragstart',
      function(e) {
        e.dataTransfer.effectAllowed = 'move';
        e.dataTransfer.setData('item_id', this.id);
        e.dataTransfer.setData('origin_id', el.parentElement.id);
        this.classList.add('dragging');
        return false;
      }, false
    );

    el.addEventListener(
      'dragend',
      function(e) {
        this.classList.remove('dragging');
        return false;
      },
      false
    );
  }
});

app.directive('droppable', function() {
  return function(scope, element, attrs) {
    // Get the native element
    var el = element[0];

    // Add event listeners
    el.addEventListener(
      'dragover',
      function(e) {
        e.preventDefault(); // Allow the drop

        // Set effects
        e.dataTransfer.dropEffect = 'move';
        this.classList.add('dragover');
        return false;
      }, false
    );

    el.addEventListener(
      'dragenter',
      function(e) {
        this.classList.add('dragover');
        return false;
      }, false
    );

    el.addEventListener(
      'dragleave',
      function(e) {
        this.classList.remove('dragover');
        return false;
      }, false
    );

    el.addEventListener(
      'drop',
      function(e) {
        this.classList.remove('dragover');

        // Get the data
        var destination = this.id;
        var item_to_move = e.dataTransfer.getData('item_id');
        var origin = e.dataTransfer.getData('origin_id');

        // Call the scope move function
        scope.MoveItem(origin, destination, item_to_move);

        return false;
      }, false
    );
  }
});
app.directive('focusMe', function($timeout, $parse) {
  return {
    link: function(scope, element, attrs) {
      var model = $parse(attrs.focusMe);
      scope.$watch(model, function(value) {
        console.log('value=',value);
        if(value === true) { 
          $timeout(function() {
            element[0].focus(); 
          });
        }
      });
      element.bind('blur', function() {
        console.log('blur')
        scope.$apply(model.assign(scope, false));
      })
    }
  };
});
app.directive('dateFormat', function() {
  return {
    require: 'ngModel',
    link: function(scope, element, attr, ngModelCtrl) {
      //Angular 1.3 insert a formater that force to set model to date object, otherwise throw exception.
      //Reset default angular formatters/parsers
      ngModelCtrl.$formatters.length = 0;
      ngModelCtrl.$parsers.length = 0;
    }
  };
});

</script>
<script type="text/javascript">
  $(document).ready(function () {
    $(".sidebar").toggleClass("hide-nav");
    $(".wrapper").toggleClass("active");

    $('.scroll').slimScroll({});

    $(".wrapper_rightbar").click(function(){
      $(this).toggleClass("rb_active");
            $("#rightbar").toggleClass("open_right");
            $(".right_sidebar_nav i.fa-chevron-left").toggleClass("fa-chevron-right");
    });
    $(".right_sidebar_nav").click(function(){
      $(".wrapper_rightbar").toggleClass("rb_active");
            $("#rightbar").toggleClass("open_right");
            $(".right_sidebar_nav i.fa-chevron-left").toggleClass("fa-chevron-right");
    });
    
    /*$(".dropdown").click(function(){
      $(this).toggleClass("open")
    });*/  

    $(".dd1").click(function(){
      $(this).toggleClass("open")
    });
        
    $(".dd2").click(function(){
     $(this).toggleClass("open")
    });

    $(".dd3").click(function(){
     $(this).toggleClass("open")
    });

    $(".dd4").click(function(){
      $(this).toggleClass("open")
    });
  

    $(".right_btn").click(function(){
      $(".wrapper_rightbar").toggleClass("rb_active");
            $("#rightbar").toggleClass("open_right");
            $(".right_sidebar_nav i.fa-chevron-left").toggleClass("fa-chevron-right");
    });

    $(".horizontal-tabs ul li a").click(function(){
            $(".horizontal-tabs ul li a").toggleClass("active");
    });    

   $("#tab_scrolls").horizontalTabs();

    

  });
</script>
