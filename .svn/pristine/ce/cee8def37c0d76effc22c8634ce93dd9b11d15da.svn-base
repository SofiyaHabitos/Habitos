<% id = session[:kitchen_user_id] %>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
<script src="/assets/angular.js"></script>
<script type="text/javascript" src="/assets/Chart.bundle.min.js"></script>
<link href="/assets/medias.css" rel="stylesheet">
<link href="/assets/new_menu.css" rel="stylesheet">
<link href="/assets/old_menu.css" rel="stylesheet">
<link href="/assets/menuplaner.css" rel="stylesheet">

<body>
  <div class="row container_pad" ng-app="dragDrop" ng-controller="DragDropCtrl">
    <div class="col-md-12 loading" ng-show="spinner">
      <img src="/assets/green_spinner.gif" height="70">
    </div>
    <div class="col-md-3 card_bg">
      <div class="inner-addon right-addon search_width">
        <i class="fa fa-search"></i>
        <input type="text" class="form-control search" ng-model="name" placeholder="Search Menu Items">
      </div>
      <div class="menu_card">
        <div class="row menu_btns2">
          <h1>Menu List</h1> 
        </div>
        <div class="item_list scroll">

          <div class="empty_list" ng-show="!mealstype_name && !mealtime_name">            
            <div class="empty_comment row ">
            <div class="col-md-12">
            <img src="/assets/flat1.png" height="90px">
              <p>Please select MealTime and Meal Group to see available production items</p>   
            </div>
            </div>
          </div>          
          <div class="empty_list" ng-show="mealstype_name && !mealtime_name">            
            <div class="empty_comment row ">
            <div class="col-md-12">
            <img src="/assets/flat1.png" height="90px">
              <p>Please select MealTime to see available production items</p>
            </div>
            </div>
          </div>
          <div class="empty_list" ng-show="mealtime_name && !mealstype_name">            
            <div class="empty_comment row ">
            <div class="col-md-12">
              <img src="/assets/flat1.png" height="90px">
              <p>Please select Meal Group to see available production items</p>   
            </div>
            </div>
          </div>          
          <div ng-show="mealstype_name && mealtime_name " class="row row_pad" id="production_items" droppable>
            <h1 class="Category_head">All Items: {{mealtime_name}}
            <span ng-show="mealtime_name">,</span>{{mealstype_name}}</h1>
            <div class="col-md-4 item_hg" id="{{item.id}}" ng-repeat="item in data.production_items | filter: restrict_name | filter: name | filter: alergy_name | filter: mealstype_name:true | filter: mealtime_name |  filter: meals_name:'meal_course_name'" draggable>
              <div class="img_bg">
                <img class="item_img" ng-src="/assets/item-1.png">
                <p>{{item.name}}</p>
              </div>          
            </div>          
          </div>
        </div>  
      </div>
    </div>

    <div class="col-md-9 menu_body">
      <div class="title_head">
        <h1 class="planner-title">MENU PLANNER - EDIT</h1>
      </div>
      <div class="field_division">
        <h2 class="field_name">Enter Meal Group:</h2>
        <input type="text" class="menu_field" ng-model="meal_name">
      </div>
      <div class="row">
        <div class="col-md-4 dropdown_btn">
          <div class="dropdown">
           <!--  <button class="btn btn-info btn-sm btn_check dropdown-toggle" type="button" >
              <img src="/assets/meal-time.png" class="checkbox_img1">
              <h5 class="checkbox_name" ng-show="!mealtime_name">Meal Time</h5>
              <h5 class="checkbox_name" ng-show="mealtime_name">{{mealtime_name}}</h5>
              <i class="fa fa-chevron-down" aria-hidden="true"></i>
            </button> -->
            <button class="btn btn-info btn-sm btn_check dropdown-toggle" type="button" data-toggle="dropdown">
              <img src="/assets/meal-time.png" class="checkbox_img1">
              <h5 class="checkbox_name" ng-show="!mealtime_name">Meal Time</h5>
              <h5 class="checkbox_name" ng-show="mealtime_name">{{mealtime_name}}</h5>
              <i class="fa fa-chevron-down" aria-hidden="true"></i>
            </button>
             <ul class="dropdown-menu">
              <li ng-click="mealstime(x)" ng-model="meals" ng-repeat="x in mealtime">               
                <label class="li_list" name="check" for="{{x.category_name}}">
                    <input type="radio"  name="check" id="{{x.category_name}}" ng-checked="x.ischecked"/>
                    <span class="fake-input"></span>
                    <span class="fake-label">{{x.category_name}}</span>
                </label>                
              </li>
            </ul>
            <!-- <ul class="dropdown-menu" ng-init="mealstime(mealstim)">
              <li ng-model="meals" ng-repeat="x in mealtime">
                <label class="li_list" name="check" for="{{x.category_name}}">
                    <input type="radio"  name="check" id="{{x.category_name}}"  ng-checked="x.ischecked" />
                    <span class="fake-input"></span>
                    <span class="fake-label">{{x.category_name}}</span>
                </label>                
              </li>
            </ul> -->
          </div>
        </div>

        <div class="col-md-4 dropdown_btn">
          <div class="dropdown">
            <button class="btn btn-info btn-sm btn_check dropdown-toggle" type="button" ng-disabled="true">
              <img src="/assets/mealtype.png" class="checkbox_img">
              <h5 class="checkbox_name" ng-show="!mealstype_name">Meal Type</h5>
              <h5 class="checkbox_name" ng-show="mealstype_name">{{mealstype_name}}</h5>
              <i class="fa fa-chevron-down" aria-hidden="true"></i>
            </button>
            <ul class="dropdown-menu" ng-init="mealstype(mealstype)">
              <li ng-repeat="x in mealtype">
                <label class="li_list"  for="{{x.name}}">
                  <input type="radio"  name="check2" id="{{x.name}}" ng-checked="x.ischecked" ng-disabled="!x.ischecked"/>
                  <span class="fake-input"></span>
                  <span class="fake-label">{{x.name}}</span>
                </label>
              </li>
            </ul>          
          </div>
        </div>

        <div class="col-md-4 dropdown_btn">
          <div class="dropdown" >
            <button class="btn btn-info btn-sm btn_check dropdown-toggle" type="button" ng-disabled="true">
              <img src="/assets/restriction.png" class="checkbox_img">
              <h5 class="checkbox_name" ng-show="!restrict_name">Restriction</h5>
              <h5 class="checkbox_name" ng-show="restrict_name">{{restrict_name}}</h5>
              <i class="fa fa-chevron-down" aria-hidden="true"></i>
            </button>
            <ul class="dropdown-menu" nginit="restricters(restricttype)">

              <li ng-show="noRestrict">
                <label class="li_list" name="check3" for="No Restriction">
                    <input type="radio" name="check3" id="No Restriction" ng-disabled="true" /checked>
                    <span class="fake-input"></span>
                    <span class="fake-label">No Restriction</span>
                </label>                
              </li>

              <li  ng-show="!noRestrict">
                <label class="li_list" name="check3" for="No Restriction">
                    <input type="radio"  ng-disabled="true" name="check3" id="No Restriction">
                    <span class="fake-input"></span>
                    <span class="fake-label">No Restriction</span>
                </label>                
              </li>

              <li  ng-model="rest" ng-repeat=" x in restriction">
                <label class="li_list" name="check3" for="{{x.meal_restriction_name}}">
                    <input type="radio"  name="check3" id="{{x.meal_restriction_name}}" ng-checked="x.ischecked" ng-disabled="!x.ischecked"/>
                    <span class="fake-input"></span>
                    <span class="fake-label">{{x.meal_restriction_name}}</span>
                </label>                
              </li>
            </ul>

          </div>
        </div>

        <div class="col-md-4 dropdown_btn">
          <div class="dropdown">
            <button class="btn btn-info btn-sm btn_check dropdown-toggle" type="button" ng-disabled="true">
              <img src="/assets/Alergy.png" class="checkbox_img">
              <h5 class="checkbox_name" ng-show="!alergy_name">Student Type</h5>
              <h5 class="checkbox_name" ng-show="alergy_name">{{alergy_name}}</h5>
              <i class="fa fa-chevron-down" aria-hidden="true"></i>
            </button>
            <ul class="dropdown-menu" ng-init="alergvals(alergiestype)">
              <li ng-model="alers" ng-repeat="x in alergies">
                <label class="li_list" name="check4" for="{{x.name}}">
                    <input type="radio"  name="check4" id="{{x.name}}" ng-checked="x.ischecked" ng-disabled="!x.ischecked"/>
                    <span class="fake-input"></span>
                    <span class="fake-label">{{x.name}}</span>
                </label>
              </li>
            </ul>
          </div>
        </div>
      </div>
      
      <div class="row" >
        <section id="UPC" class="first">
          <div class="col-md-12">
            <div id="tab_scrolls" class="horizontal-scrollable-tabs">
              <div class="scroller arrow-left nav_btn1">
                <i class="fa fa-chevron-left"></i>
              </div>
              <div class="scroller arrow-right nav_btn2">
                <i class="fa fa-chevron-right"></i>
              </div>
              <div class="horizontal-tabs">
                <ul role="tablist" class="nav nav-tabs nav-tabs-horizontal scroll">
                  <li class="col-md-3 col_pad2 nav-item" ng-repeat="course in meal_course">
                    <a ng-class="{'select_tab active': Editselect == course.meal_course_name || meals_name == course.meal_course_name}" href="#{{meals_name}}" data-toggle="tab" ng-click="courseval(course)" role="tab">{{course.meal_course_name}}</a>
                  </li>
                </ul>
              </div>
            </div>      

            {{meal_course_name}}      

            <form class="tab-content" novalidate name="form" id="{{meals_name}}">
              <div class="row" class="tab-pane active" role="tabpanel">
                <div class="col-md-12 col_pad">
                  <div class="drag_bg" id="sub_production_items" droppable >
                    <div class="col-md-7 scrollbar" id="style-2">
                      <div  id="{{ item.id }}"  ng-repeat="item in data.sub_production_items | filter: meals_name:'meal_course_name'" draggable>
                        <div class="row row_pad item_display" ng-model="test" ng-init="test = item.item_meal_course[0].meal_course_name">
                          <div class="row row_pad drag_item_brd">
                            <div class="col-md-2 col_pad2">
                              <img class="item_img2" src="/assets/item-1.png" />
                            </div>
                            <div class="col-md-4 col_pad">
                              <h1>{{item.name}}</h1>
                              <h2>Ingredients</h2>
                            </div>
                            <div class="col-md-3 col_pad">
                              <p>Qty</p>
                              <input type="number" ng-model="item.quantity" ng-required="true"  class="form-control">
                            </div>

                            <div class="col-md-3 col_pad">
                              <p>UOM</p>
                              <input type="text" ng-model="item.uom_name"  class="form-control" ng-required="true"  readonly="true">
                            </div>
                          </div>

                          <div class="col-md-1 remove">
                            <i class="fa fa-minus-circle" ng-click="removeitem(item)"></i>
                          </div>
                        
                        </div>
                      </div>
                    </div>

                    <div class="col-md-5 col_pad3" ng-show="chart && data.sub_production_items.length > 0">
                        <canvas id="myChart" ></canvas>                      
                    </div>
                
                      <div ng-show="data.sub_production_items.length > 0 " >
                        
                        <button class="btn btn-warning btn_drag_right2" ng-click="Reset()">Reset</button>
                        <button class="btn btn-warning btn_drag_right right_btn" ng-click="checkout('showside')" ng-disabled="form.$invalid">Preview</button>


                      </div>                                        
                    </div>
                  </div>
                </div>                
            </form>

          </div>


      </section>

    </div>

    </div>
<div class="wrapper_rightbar"></div>
  <div  class="right_bar" id="rightbar" ng-show="mealtime_name && mealstype_name && showside">

    <div class="right_sidebar_nav">
      <i class="fa fa-chevron-left toggle_icon" aria-hidden="true"></i>
      <div class="items_selected" id="selected_items">
        <div class="list_bg">
          <h1 class="selected_list">Selected Items</h1>
          <div class="selected_category">
            <div class="category_list" >
             <div ng-repeat="product3 in predata">
              <div class="category_card"  ng-repeat="(key,product1) in product3">
                <h3 class="card_name">{{key}}<a href=""><i class="fa fa-pencil-square-o" aria-hidden="true" ng-click="tabEdit(key)"></i></a></h3>

                <table>
                  <thead>
                    <tr>
                      <th>Items</th>
                      <th>Quantity</th>
                      <th></th>
                    </tr>
                  </thead>
                  <tbody >
                    <tr ng-repeat="product in product1">
                      <th>{{product.production_item_name}}</th>
                      <td>{{product.quantity}}</td>
                      <td aria-hidden="false"><i class="fa fa-minus-circle"  ng-click="removedata($index,product)"></i></td>
                    </tr>
                                                          
                  </tbody>
                </table>
              </div>
              </div>
                                          
            </div>
            <button ng-disabled="production_dataval.length < 1 || !meal_name || !mealtime_name || !mealstype_name " class="btn btn-warning btn_right" ng-click="overall()"><i class="fa fa-plus-circle" aria-hidden="true"></i> Update Menu</button>
          </div>
        </div>
      </div>      
    </div>
  </div>
</div>
<script src="/assets/nicescroll.js"></script>
<script src="/assets/horizontal_tabscroll.js"></script>
</body>

<script type="text/javascript">
var app = angular.module('dragDrop', []);

app.controller('DragDropCtrl', function($scope,$http,$rootScope,$window) {
var plannerURL="http://api.idlidabba.com"
//var plannerURL="http://api.learnstein.com:81"
//var plannerURL="http://192.168.1.72:3005"

var menu_master_id = "<%= params[:id] %>"
$scope.spinner=true;
//$http.get(plannerURL+"/api/v1/all_production_items")
$scope.mealstim={id:'',category_name:''};
$scope.mealstype={id:'',name:''};
$scope.alergiestype={id:'',name:''};
$scope.restricttype={id:'',meal_restriction_name:''};
$scope.coursetype={id:'',meal_course_name:''};

$http.get(plannerURL+"/api/v1/categories")
    .then(function(response) {
        $scope.mealtime = response.data;
        
})
$http.get(plannerURL+"/api/v1/edit_menu."+menu_master_id)
    .then(function(response) {
        
        $rootScope.data = response.data;
        
        $scope.alergy_name=response.data.menu_master[0].stud_type;
        
        $scope.meal_name = response.data.menu_master[0].menu_master_name;
        
        
        $scope.mealtime_id = response.data.menu_master[0].category_id;
        $scope.mealtime_name = response.data.menu_master[0].category_name;
        $scope.mealstim={"id":$scope.mealtime_id,"category_name":$scope.mealtime_name};

        $scope.mealstype_name = response.data.menu_master[0].food_category_name;
        $scope.mealstype_id = response.data.menu_master[0].food_category_id;
        $scope.mealstype={"id":$scope.mealstype_id,"name":$scope.mealstype_name}

        //$scope.alergy_name = response.data.menu_master[0].allergy_name;
        /*$scope.alergy_id = response.data.menu_master[0].allergy_id;
        $scope.alergiestype={"id":$scope.alergy_id,"name":$scope.alergy_name}
        if(response.data.menu_master[0].allergy_name == null){
          $scope.noAlergy=true;
        }*/


        $scope.restrict_name = response.data.menu_master[0].meal_restriction_name;
        $scope.restrict_id = response.data.menu_master[0].meal_restriction_id;
        $scope.restricttype={"id":$scope.restrict_id,"meal_restriction_name":$scope.restrict_name}
        if(response.data.menu_master[0].meal_restriction_id == null){
          $scope.noRestrict=true;
        }

       // console.log(response.data.sub_production_items[0].nutrition);
        $scope.chartvalue=[];
        for(var l in response.data.sub_production_items[0].nutrition){
          if($scope.chartvalue.length < 1 ){
            $scope.chartvalue.push(
              response.data.sub_production_items[0].nutrition.protein,
              response.data.sub_production_items[0].nutrition.fat,
              response.data.sub_production_items[0].nutrition.carbohydrates,
              response.data.sub_production_items[0].nutrition.fibre,
              response.data.sub_production_items[0].nutrition.minerals.Calcium
            )
          }
        }

        var ctx = document.getElementById("myChart").getContext('2d');
        var chartdatas=$scope.chartvalue;
        var myChart = new Chart(ctx, {
          type: 'pie',
          data: {
            labels: ["protein", "fat", "carbohydrates", "fibre", "minerals"],
            datasets: [{
              backgroundColor: [
                "#e761b6",
                "#ffde45",
                "#fe803d",
                "#676767",
                "#00aeef"
              ],
              data:chartdatas
            }]
          }
        });

        
        
        $scope.spinner=false;


      $http.get(plannerURL+"/api/v1/categories")
          .then(function(response) {
            //$scope.mealtime = response.data;
            $scope.mealtime=[];
            for(var i in response.data){
             $scope.mealtime.push({"id":response.data[i].id,"category_name":response.data[i].category_name,"ischecked":null})
             if($scope.mealstim.id==response.data[i].id){
              $scope.mealtime[i].ischecked=true;
             }
           }
      })


      $http.get(plannerURL+"/api/v1/meal_restrictions")
          .then(function(response) {
            //$scope.restriction = response.data;
            $scope.restriction=[];
            for(var i in response.data){
            $scope.restriction.push({"id":response.data[i].id,"meal_restriction_name":response.data[i].meal_restriction_name,"ischecked":null})
            if($scope.restricttype.id==response.data[i].id){
              $scope.restriction[i].ischecked=true;
            }
          }


      })


      $http.get(plannerURL+"/api/v1/all_food_categories")
          .then(function(response) {
              //$scope.mealtype = response.data;
          $scope.mealtype=[];
          for(var i in response.data){
            $scope.mealtype.push({"id":response.data[i].id,"name":response.data[i].name,"ischecked":null})
            if($scope.mealstype.id==response.data[i].id){
              $scope.mealtype[i].ischecked=true;
            }
          }
      })

      $http.get(plannerURL+"/api/v1/meal_courses")
          .then(function(response) {
              $scope.meal_course = response.data;
              $scope.meals_name=$scope.meal_course[0].meal_course_name;
              $scope.meals_id=$scope.meal_course[0].id;
              //console.log($scope.meals_name,$scope.meals_id)
              $scope.coursetype={"id":$scope.meals_name,"meal_course_name":$scope.meals_name}
              $scope.chart=true;
      })

      /*$http.get(plannerURL+"/api/v1/all_allergies")
          .then(function(response) {
              //$scope.alergies = response.data;
              $scope.alergies=[];
            for(var i in response.data){
              $scope.alergies.push({"id":response.data[i].id,"name":response.data[i].name,"ischecked":null})
              if($scope.alergiestype.id==response.data[i].id){
                $scope.alergies[i].ischecked=true;
              }
            }
      })*/

      $scope.alergies=[{name:"Primary"},{name:"Secondary"}];

        },function(error){
        $scope.spinner=false;
    })
    /*
    */

$scope.tabEdit=function(value){
  $scope.meals_name=value;
  $scope.Editselect=value
}

$scope.alergvals=function(aler){
  if(aler == "" || aler == null){
    $scope.alergy_name ='';
    $scope.noAlergy=true;
  }
  else{
    $scope.alergy_name=aler.name;
    $scope.alergy_id=aler.id;
    $scope.noAlergy=false;  
  }
  
};  


$scope.mealstime=function(meal){
  if(meal == "" || meal == null){
    $scope.mealtime_name ='';
  }
  else{
    $scope.mealtime_name=meal.category_name;
    $scope.mealtime_id=meal.id;
  }
};
$scope.i=0;

$scope.mealstype=function(mealtype){
  /*if($rootScope.data.sub_production_items != 0){
    $scope.i=$scope.i+1;
    if($rootScope.data.sub_production_items.length > 0 && $scope.mealstype_name != mealtype.name && $scope.i == 2 ){
      if($window.confirm("Are you Sure to you want change?")) {
        $window.location.reload();
        $scope.i=0;
      }else {
        $scope.i=0;
        $scope.mealstype_name=$scope.mealstype_name;
        $scope.mealstype_id=$scope.mealstype_id;
      }
    }
    else{
      $scope.i=1;
    }
  }
  else{*/
    if(mealtype == "" || mealtype == null){
      $scope.mealstype_name ='';
    } 
    else{
      $scope.mealstype_name=mealtype.name;
      $scope.mealstype_id=mealtype.id
    }
 /* }*/
  
};

$scope.restricters=function(restrict){
  if(restrict == "" || restrict == null){
    $scope.restrict_name ='';
    $scope.noRestrict=true;

  }
  else{
   $scope.restrict_name=restrict.meal_restriction_name;
   $scope.restrict_id=restrict.id;
   $scope.noRestrict=false;
  }

};

$scope.courseval=function(cour){

  if(cour == "" || cour == null){
     $scope.meals_name ='';
  }
  else{
   
    $scope.meals_name=cour.meal_course_name;
    $scope.meals_id=cour.id;
    //$scope.chart=true;

    if($scope.data.sub_production_items.length > 0){
      var chartcheck=false;
      for(var i in $scope.data.sub_production_items){
        for(var m in $scope.data.sub_production_items[i].item_meal_course){
          if($scope.data.sub_production_items[i].item_meal_course[m].meal_course_name==cour.meal_course_name){
            chartcheck=true
          }
        }
        
      }
      if(chartcheck){
        $scope.chart=true;
      }
      else{
        $scope.chart=false;
      }
    }
    
  }
};

$scope.Reset=function(){
  $window.location.reload();
}

$scope.removeitem=function(item){
 if(item.menu_production_item_id =="" || item.menu_production_item_id == null){

  var index=$rootScope.data.sub_production_items.findIndex(x =>x.name == item.name)
  $rootScope.data.sub_production_items.splice(index, 1);
  $scope.production_data.splice(index, 1);
  $scope.production_dataval.splice(index, 1);
  $rootScope.data.production_items.push(item)
 }
 else{
    $http.get(plannerURL+"/api/v1/menu_production_item."+item.menu_production_item_id)
    .then(function(response) {
      if(response.data == true){
          alert("Successfully destroyed");
  var index=$rootScope.data.sub_production_items.findIndex(x =>x.name == item.name) 
  $rootScope.data.sub_production_items.splice(index, 1);
  $scope.production_data.splice(index, 1);
  $scope.production_dataval.splice(index, 1);
  $rootScope.data.production_items.push(item)
      }
      else {
        alert("Could not remove this item");
      }
    })

 } 
}

$scope.removedata=function(index,product){
  for(var i in $scope.production_dataval){
    if($scope.production_dataval[i].production_item_id == product.production_item_id){
    //var productIndex=$scope.production_dataval[i].indexOf(product.production_item_id)
     var productIndex=$scope.production_dataval.findIndex(x => x.production_item_id==$scope.production_dataval[i].production_item_id)
      $scope.production_dataval.splice(productIndex, 1);
    }

    //$scope.production_dataval($scope.production_dataval[i].production_item_id)
  }
  for(var l in $scope.predata){
    for(var x in $scope.predata[l]){
      for(var y in $scope.predata[l][x]){
        if($scope.predata[l][x][y].production_item_id == product.production_item_id){
          var productIndex=$scope.predata[l][x].findIndex(m => m.production_item_id==$scope.predata[l][x][y].production_item_id)
            $scope.predata[l][x].splice(productIndex, 1);
        }
      }
    }
  }
 
  /*console.log(product)
  $scope.production_dataval.splice(index, 1);*/
}


$scope.production_data=[];
$scope.production_dataval=[];
$rootScope.CourseData=[];
$scope.checkout=function(showside){

  //console.log($scope.production_data)
  if($scope.production_data.length < 1 ){
    //$scope.production_data = $rootScope.data.sub_production_items;
    for(var i in $rootScope.data.sub_production_items){
      //console.log($rootScope.data.sub_production_items[i].meal_course_name)

      $scope.production_data.push(
            {
             "production_item_id":$rootScope.data.sub_production_items[i].id,
             "production_item_name":$rootScope.data.sub_production_items[i].name,
             "quantity":$rootScope.data.sub_production_items[i].quantity,
             "meal_course_id":$rootScope.data.sub_production_items[i].meal_course_id,
             "meal_course_name":$rootScope.data.sub_production_items[i].meal_course_name,
             "menu_production_item_id":$rootScope.data.sub_production_items[i].menu_production_item_id
           })
    }
  }

  if($scope.meal_name == null ||  $scope.meal_name == ""){
    alert("Please Enter MealGroup");
    $scope.showside=''
  }

  else if( $scope.mealtime_id == null ||  $scope.mealtime_id == ""){
    alert("Please Select MealTime");
    $scope.showside=''
  }

  else if($scope.mealstype_name == null ||  $scope.mealstype_name == ""){
    alert("Please Select MealType");
    $scope.showside=''
  }

  

  else{
  $scope.showside=showside;
  var Checkdata=false;
  for(m in $scope.production_data){
    console.log($scope.production_data[m].meal_course_name,$scope.production_data[m].meal_course_id)
    var Checkdata=false;
    if($scope.production_dataval.length > 0){
      for(n in $scope.production_dataval){
        if($scope.production_dataval[n].production_item_name == $scope.production_data[m].production_item_name){
          Checkdata=true;
        }
      }
    }
    if(Checkdata != true){

      $scope.production_dataval.push({
        "production_item_id":$scope.production_data[m].production_item_id,
        "production_item_name":$scope.production_data[m].production_item_name,
        "quantity":$scope.production_data[m].quantity,
        "meal_course_id":$scope.production_data[m].meal_course_id,
        "meal_course_name":$scope.production_data[m].meal_course_name,
        "menu_production_item_id":$scope.production_data[m].menu_production_item_id
      })
    }
  }

console.log($scope.production_dataval)

  for(var i in $scope.production_dataval){
    if($rootScope.data.sub_production_items[i].quantity == "" || $rootScope.data.sub_production_items[i].quantity == null){
     $scope.production_dataval.splice(i, 1);
    }
  }
  for(var i in $scope.production_data){
    if ($scope.production_dataval[i].production_item_id == $scope.production_dataval[i].production_item_id) {
      var checkqty=true;
      $scope.production_dataval[i].quantity=$rootScope.data.sub_production_items[i].quantity;
    }
  }

 //console.log($scope.production_dataval,checkqty)
if(checkqty == true){
for(x in $scope.production_dataval){
var Course = $scope.production_dataval[x].meal_course_name  
  var obj = { [Course]: {
        "production_item_id":$scope.production_data[x].production_item_id,
        "production_item_name":$scope.production_data[x].production_item_name,
        "quantity":$scope.production_dataval[x].quantity,
        "meal_course_id":$scope.production_data[x].meal_course_id,
        "meal_course_name":$scope.production_data[x].meal_course_name
      }}
    $rootScope.CourseData.push(obj)
  }

var pdata={
  "data":
     $rootScope.CourseData
};

$http({
          method: 'post',
          url:plannerURL+"/api/v1/menu_courses",
          data: pdata    
        }).then(function(response) {
          $scope.prviewdata=[];
          $scope.predata=response.data;
          $rootScope.CourseData=[];
          for(var i in response.data){
            for(var x in response.data[i]){
              $scope.prviewdata.push(x,response.data[i][x])
            }
          }
        })

  //$rootScope.data.sub_production_items=[];
  }
  }
}


$scope.overall=function(){

  var data={
    "menu_master" : {
      "menu_master_id":menu_master_id,
      "menu_master_name": $scope.meal_name,
      "category_id": $scope.mealtime_id,
      "cost": null,
      "food_category_id" : $scope.mealstype_id,
      "meal_restriction_id" : $scope.restrict_id,
      "username": "<%= KitchenUser.find(id).name %>",
      "allery_id": $scope.alergy_id,
      
      "production_items" :
        $scope.production_dataval
    }
  };

  $http({
    method: 'post',
    url:plannerURL+"/api/v1/update_menu_master",
    data: data    
  }).then(function(response) {
    $scope.production_dataval=[]
    location.href="/menu_masters";
  })
}

   

    $scope.MoveItem = function(origin, dest, item_id) {
      $scope.chart_id=item_id
      if( $scope.meals_id == null ||  $scope.meals_id == ""){
        alert("Please Select Course");
      }
      else{
        if (origin == dest) return;
        for (var i = 0; i < $scope.data[origin].length; i++){
          if($scope.data[origin][i].id == item_id) {
            var item = $scope.data[origin].splice(i, 1);
            $scope.chart=true;
            $scope.data[dest].push(item[0]);

            break;
          }
        }
   
        for(var i in $rootScope.data.sub_production_items){
           var checkdata=false;
           for(var l in $scope.production_data){
              if($scope.production_data[l].production_item_name == $rootScope.data.sub_production_items[i].name){
                checkdata=true;
              }
           }
          if(checkdata !=true){ 
          // console.log($rootScope.data.sub_production_items[i].item_meal_course[0],"Meal")
            $scope.production_data.push({
              "production_item_id":$rootScope.data.sub_production_items[i].id,
              "production_item_name":$rootScope.data.sub_production_items[i].name,
              "quantity":$rootScope.data.sub_production_items[i].quantity,
              "meal_course_id":$rootScope.data.sub_production_items[i].item_meal_course[0].id,
              "meal_course_name":$rootScope.data.sub_production_items[i].item_meal_course[0].meal_course_name,
              "menu_production_item_id":$rootScope.data.sub_production_items[i].menu_production_item_id
            })
          }

        }    

        $scope.chartvalue=[];
        for(var l in $scope.data[dest]){
          if($scope.chartvalue.length < 1 ){
            $scope.chartvalue.push(
              $scope.data[dest][l].nutrition.protein,
              $scope.data[dest][l].nutrition.fat,
              $scope.data[dest][l].nutrition.carbohydrates,
              $scope.data[dest][l].nutrition.fibre,
              $scope.data[dest][l].nutrition.minerals.Calcium
            )
          }
        }
        $scope.$apply();
      /*  $http.get("http://192.168.1.59:3005/api/v1/get_nutrition."+$scope.chart_id)
      .then(function(response) {
        $rootScope.chartvalue=[];
          $rootScope.chartvalue.push(
            response.data.protein,
            response.data.fat,
            response.data.carbohydrates,
            response.data.fibre,
            response.data.minerals.Calcium,
          );
          console.log($rootScope.chartvalue);
      })*/
      var ctx = document.getElementById("myChart").getContext('2d');
      var chartdatas=$scope.chartvalue;
      var myChart = new Chart(ctx, {
        type: 'pie',
        data: {
          labels: ["protein", "fat", "carbohydrates", "fibre", "minerals"],
          datasets: [{
            backgroundColor: [
              "#e761b6",
              "#ffde45",
              "#fe803d",
              "#676767",
              "#00aeef"
            ],
            data:chartdatas
          }]
        }
      });
    }
  }
});

app.directive('draggable', function() {
  return function(scope, element, attrs) {
    var el = element[0];
    el.draggable = true; // Make dragable

    // Add event listeners
    el.addEventListener(
      'dragstart',
      function(e) {
        e.dataTransfer.effectAllowed = 'move';
        e.dataTransfer.setData('item_id', this.id);
        e.dataTransfer.setData('origin_id', el.parentElement.id);
        this.classList.add('dragging');
        return false;
      }, false
    );

    el.addEventListener(
      'dragend',
      function(e) {
        this.classList.remove('dragging');
        return false;
      },
      false
    );
  }
});

app.directive('droppable', function() {
  return function(scope, element, attrs) {
    // Get the native element
    var el = element[0];

    // Add event listeners
    el.addEventListener(
      'dragover',
      function(e) {
        e.preventDefault(); // Allow the drop

        // Set effects
        e.dataTransfer.dropEffect = 'move';
        this.classList.add('dragover');
        return false;
      }, false
    );

    el.addEventListener(
      'dragenter',
      function(e) {
        this.classList.add('dragover');
        return false;
      }, false
    );

    el.addEventListener(
      'dragleave',
      function(e) {
        this.classList.remove('dragover');
        return false;
      }, false
    );

    el.addEventListener(
      'drop',
      function(e) {
        this.classList.remove('dragover');

        // Get the data
        var destination = this.id;
        var item_to_move = e.dataTransfer.getData('item_id');
        var origin = e.dataTransfer.getData('origin_id');

        // Call the scope move function
        scope.MoveItem(origin, destination, item_to_move);

        return false;
      }, false
    );
  }
});

</script>
<script type="text/javascript">
  $(document).ready(function () {


    $(".sidebar").toggleClass("hide-nav");
    $(".wrapper").toggleClass("active");

    $('.scroll').slimScroll({});

    $(".wrapper_rightbar").click(function(){
      $(this).toggleClass("rb_active");
            $("#rightbar").toggleClass("open_right");
            $(".right_sidebar_nav i.fa-chevron-left").toggleClass("fa-chevron-right");
    });
    $(".right_sidebar_nav").click(function(){
      $(".wrapper_rightbar").toggleClass("rb_active");
            $("#rightbar").toggleClass("open_right");
            $(".right_sidebar_nav i.fa-chevron-left").toggleClass("fa-chevron-right");
    });
    
    $(".dropdown").click(function(){
      $(this).toggleClass("open")
    });  
    

    $(".right_btn").click(function(){
      $(".wrapper_rightbar").toggleClass("rb_active");
            $("#rightbar").toggleClass("open_right");
            $(".right_sidebar_nav i.fa-chevron-left").toggleClass("fa-chevron-right");
    });

    $(".horizontal-tabs ul li a").click(function(){
            $(".horizontal-tabs ul li a").toggleClass("active");
    });    

    $("#tab_scrolls").horizontalTabs();

    

  });

  

</script>
