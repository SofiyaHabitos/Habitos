c
enrolments
enrolments.first.where(order_source: "Enroll")
enrolments.where(order_source: "Enroll")
enrolments.first
enrolments
c
enrolment.uniq.first
enrolment.uniq
enrolment.first
enrolment
c
val
c
Tenant.find(5).tenant_details.find_by(meal_time: enrol.meal_time, meal_restriction:  enrol.meal_restriction,stud_type: enrol.stud_type)
Tenant.find(1).tenant_details.find_by(meal_time: enrol.meal_time, meal_restriction:  enrol.meal_restriction,stud_type: enrol.stud_type)
Tenant.find(1).tenant_details.find_by(meal_time: enrol.meal_time, meal_restriction:  enrol.meal_restriction)
Tenant.find(5).tenant_details.find_by(meal_time: enrol.meal_time, meal_restriction:  enrol.meal_restriction)
Tenant.find(5).tenant_details.find_by(meal_time: enrol.meal_time)
Tenant.find(5).tenant_details
Tenant.find(5)
tenant.tenant_details
tenant.tenant_detail
tenant = Tenant.find_by("from_date <= ? AND to_date >= ?" ,enrol.from_date, enrol.to_date)
Tenant.find_by("from_date <= ? AND to_date >= ?" ,enrol.from_date, enrol.to_date)
Tenant.find_by("from_date <= ? AND to_date >= ?" ,enrol.from_date, enrol.to_date).tenant_details
Tenant.find_by("from_date <= ? AND to_date >= ?" ,enrol.from_date, enrol.to_date).tenant_detail
Tenant.where("from_date <= ? AND to_date >= ?" ,enrol.from_date, enrol.to_date).tenant_detail
Tenant.where("from_date <= ? AND to_date >= ?" ,enrol.from_date, enrol.to_date)
tenant.tenant_detail
TenantDetail
tenant.tenants_detail
tenant.tenant_detail
tenant.tenant_details
tenant
tenant.tenant_details
tenant = Tenant.where("from_date <= ? AND to_date >= ?" ,enrol.from_date, enrol.to_date)
Tenant.where("from_date <= ? AND to_date >= ?" ,enrol.from_date, enrol.to_date)
Tenant.where("from_date <= ? AND to_date >= ? AND id =?" ,enrol.from_date, enrol.to_date)
Tenant.where("from_date <= ? AND to_date >= ? AND id =?" ,enrol.from_date, enrol.to_date, enrol.tenant_id)
Tenant.where("from_date <= ? AND to_date >= ?" ,enrol.from_date, enrol.to_date)
enrol.tenant.find_by("from_date <= ? AND to_date >= ?" ,enrol.from_date, enrol.to_date)
enrol.tenant.where("from_date <= ? AND to_date >= ?" ,enrol.from_date, enrol.to_date)
enrol.tenant.where("from_date <= ? AND to_date >= ?" enrol.from_date, enrol.to_date)
enrol.tenant
enrol = Enrolment.where(id: [1772,1771],status: "Approved", is_active: true).first
Enrolment.where(id: [1772,1771],status: "Approved", is_active: true).first
Enrolment.where(id: [1772,1771],status: "Approved", is_active: true)
Enrolment.where(id: [1772,1771] status: "Approved", is_active: true)
Enrolment.where(id: [1772,1771])
Enrolment.where(1772,1771)
params
c
tenant = Tenant.where("from_date <= ? AND to_date >= ? AND id= ?",i.from_date,i.to_date,i.tenant_id)
tenant = Tenant.where("from_date <= ? AND to_date >= ? AND id=",i.from_date,i.to_date,i.tenant_id)
tenant.where(id: i.tenant_id)
tenant.where(id: enrolment.tenant_id)
enrolment
tenant.count
tenant
c
Enrolment.where(id: params[:approval_id]).update(is_active: true, status:"Approved").first.errors
Enrolment.where(id: params[:approval_id]).update(is_active: true, status:"Approved")
Enrolment.where(id: params[:approval_id])
c
Enrolment.where(id: params[:approval_id]).update(is_active: true, status: "Approved")
 params["commit"] == "Approve"
c
 Enrolment.find_by(id: params[:approval_id]).update(status: "Approved")
 Enrolment.find_by(id: params[:approval_id]).update(date_of_birth: "10-7-2018")
 Enrolment.find_by(id: params[:approval_id]).update(date_of_birth: sds)
 Enrolment.find_by(id: params[:approval_id])
 Enrolment.find_by(id: params[:approval_id]).update(status: nil)
 Enrolment.find_by(id: params[:approval_id]).update(status: nil).errors
 Enrolment.where(id: params[:approval_id]).update(status: nil).errors
 Enrolment.where(id: params[:approval_id]).update(status: nil)
 Enrolment.where(id: params[:approval_id])
 Enrolment.where(id: params[:approval_id]).update(is_active: true, status: "Approved").errors
 Enrolment.where(id: params[:approval_id]).update(is_active: true, status: "Approved")
enrolment
c
enrolment.status == "Approved"
enrolment
enrolment.status
enrolment
c
tenant.where(id: enrolment.tenant_id,meal_time: enrolment.meal_time)
tenant.where(id:enrolment.tenant_id,meal_time:enrolment.meal_time)
 tenant.where(id: enrolment.tenant_id,meal_time: enrolment.meal_time)
c
Tenant.where(id: enrolment.tenant_if)c
Enrolment.last.update(to_date: 2019-06-13)
Enrolment.last.update(to_date: 2019-06-13,id_number: "859655").errors
Enrolment.last.update(to_date: 2019-06-13,id_number: "859655")
Enrolment.last.update(to_date: 2019-06-13,id_number: "8596")
Enrolment.last.update(to_date: 2019-06-13)
Enrolment.last
Tenant.where(id: enrolment.tenant_id)
Tenant.where(id: enrolment.tenant_if)
Tenant.where("from_date <= ? AND to_date >= ?", enrolment.from_date, enrolment.to_date)
Tenant.where("from_date <= ? AND to_date >= ?", enrolment.from_date, enrolment.to_date,id: enrolment.tenant_id)
enrolment
Tenant.where("from_date <= ? AND to_date >= ?", enrolment.from_date, enrolment.to_date)
Tenant.where("from_date <= ? AND to_date >= ?", enroment.from_date, enrolment.to_date)
Tenant.where(id: enrolment.tenant_id,"from_date <= ? AND to_date >= ?", enrolment.from_date,enrolment.to_date)
enrolment.from_date
Enrolment.where("from_date <= ? AND to_date >= ?", Date.today, Date.today)
Tenant.where(id: enrolment.tenant.id,"from_date <= ? AND to_date >= ?", enrolment.from_date,enrolment.to_date)
Tenant.where(id: enrolment.tenant.id)
enrolment = Enrolment.find(1768)
Enrolment.find(1768)
Enrolment.find(1768).order_source
Enrolment.find(1768)
params
c
tenant_name.compact
tenant_name 
file1.collect { |e| e[0]}.uniq
tenant_name 
c
k[0]
MenuCustomer.where(:tenant_id => tenant.id, :category_id => Category.find_by(category_name: k[0]))
MenuCustomer.where(:tenant_id => tenant.id, :category_id => Category.find_by(category_name: k[0]).id)
MenuCustomer.where(:tenant_id => tenant.id)
MenuCustomer.where(:tenant_id => tenant.id, :category_id => Category.find_by(category_name: k[0]).id, :date => dat, meal_restriction_id: k[1], stud_type: k[2])
c
MenuCustomer.where(:tenant_id => tenant.id, :category_id => Category.find_by(category_name: k[0]).id, :date => dat, meal_restriction_id: k[1], stud_type: k[2])
c
production_item.last.id
production_item.id
production_item
c
params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?)
params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?)[0]
params[:production_item][:item_meal_restrictions][:meal_restriction_id]
params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?)
 ItemMealRestriction.find_by(:production_item_id=>@production_item.id).update(:production_item_id=>@production_item.id,:meal_restriction_id=>params[:production_item][:item_meal_restrictions][:meal_restriction_id])
 ItemMealRestriction.find_by(:production_item_id=>@production_item.id).update(:production_item_id=>@production_item.id,:meal_restriction_id=>params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?))
 ItemMealRestriction.find_by(:production_item_id=>@production_item.id).present?
c
ItemMealRestriction.
params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?)
params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?))
 ItemMealRestriction.find_by(:production_item_id=>@production_item.id).update(:meal_restriction_id =>params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?))
 ItemMealRestriction.find_by(:production_item_id=>@production_item.id).update(:meal_restriction_id =>params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?).first)
 ItemMealRestriction.find_by(:production_item_id=>@production_item.id).update(:meal_restriction_id =>params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?))
 ItemMealRestriction.find_by(:production_item_id=>@production_item.id).update(:meal_restriction_id=>params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?))
 ItemMealRestriction.find_by(:production_item_id=>@production_item.id)
ItemMealRestriction.find_by(:production_item_id=>@production_item.id).update(:production_item_id=>@production_item.id,:meal_restriction_id=>params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?))
params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?)
ItemMealRestriction.find_by(:production_item_id=>@production_item.id)
 ItemMealRestriction.find_by(:production_item_id=>@production_item.id).update(:production_item_id=>@production_item.id,:meal_restriction_id=>params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?))
params[:production_item][:item_meal_restrictions]
params[:production_item][:item_meal_restrictions].present?
c
params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?)
params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?)[0]
ItemMealRestriction.find_by(:production_item_id=>@production_item.id).update(:production_item_id=>@production_item.id,:meal_restriction_id=>params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?)[0])
itemMealRestriction.find_by(:production_item_id=>@production_item.id).update(:production_item_id=>@production_item.id,:meal_restriction_id=>params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?)[0])
temMealRestriction.find_by(:production_item_id=>@production_item.id).update(:production_item_id=>@production_item.id,:meal_restriction_id=>params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?)[0])
 ItemMealRestriction.find_by(:production_item_id=>@production_item.id).present?
params[:production_item][:item_meal_restrictions]
params[:production_item][:item_meal_restrictions].present?
c
  @item_meal_restrictions.first.meal_restriction_id
  @item_meal_restrictions.first
  @item_meal_restrictions
c
params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?)
params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?)[0,nil]
params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?)[0.nil]
params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?)
params[:production_item][:item_meal_restrictions][:meal_restriction_id]
params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?)[0,nil]
ItemMealRestriction.create(:production_item_id=>@production_item.id, :meal_restriction_id=>params[:production_item][:item_meal_restrictions][:meal_restriction_id].reject(&:blank?)[0,nil])
 ItemMealRestriction.find_by(:production_item_id=>@production_item.id).present? 
params[:production_item][:item_meal_restrictions].present?
 params[:production_item][:item_meal_restrictions]
c
 ItemMealCourse.create(:production_item_id=>ProductionItem.find(params[:production_item_id]).id, :meal_course_id=>params[:production_item][:item_meal_courses][:meal_course_id].to_i)
 ItemMealCourse.create(:production_item_id=>ProductionItem.find(params[:production_item_id]), :meal_course_id=>params[:production_item][:item_meal_courses][:meal_course_id].to_i)
ProductionItem.find(params[:production_item_id]).id
ProductionItem.find(params[:production_item_id])
 ItemMealCourse.find_by(:production_item_id=>@production_item.id)
 ItemMealCourse.find_by(:production_item_id=>@production_item.id).meal_course
ItemMealCourse.create(:production_item_id=>ProductionItem.find(params[:production_item_id]), :meal_course_id=>params[:production_item][:item_meal_courses][:meal_course_id].to_i)
ItemMealCourse.find_by(:production_item_id=>@production_item.id).present?
c
ItemMealCourse.find_by(:production_item_id=>@production_item.id).meal_course
ItemMealCourse.find_by(:production_item_id=>@production_item.id)
params[:production_item][:item_meal_courses][:meal_course_id].to_i
ItemMealCourse.find_by(:production_item_id=>@production_item.id).update(:production_item_id=>@production_item.id,:meal_course_id=>params[:production_item][:item_meal_courses][:meal_course_id].to_i)
ItemMealCourse.last.meal_course
ItemMealCourse.last
ItemMealCourse.all
ItemMealCourse.find(2)
params[:production_item][:item_meal_courses][:meal_course_id]
 ItemMealCourse.find_by(:production_item_id=>@production_item.id).update(:production_item_id=>@production_item.id,:meal_course_id=>params[:production_item][:item_meal_courses][:meal_course_id].to_i) 
ItemMealCourse.find_by(:production_item_id=>@production_item.id).present? 
 ItemMealCourse.find_by(:production_item_id=>@production_item.id)
@production_item.id
c
k[:tenant_name]
k["tenant_name"]
k
c
@feedback
exit
c
@feedback.c
@feedback
cc
c
UserFeedback.last(2)
UserFeedback,lats
v.pluck(:tenant_id).uniq
v.pluck(:tenant_id)
v.count
v.coout
v.cout
v
k
c
v.where(rating:" 5")
v.first
v.count
c
v.count
v
k
c
cc
c
feedback.tenant.name
feedback
c
cc
c
cc
c
 tenant.tenant_details.pluck(:stud_type).include?data[17]
c
enrolment
enrolment[2].present? and enrolment[3].present? and enrolment[4].present? and enrolment[5].present?
 enrolment.class == Array and enrolment.count == 6
exit
enrolment = Enrolment.new(tenant_id: tenant.id, name: data[1], id_number: data[2], standard: data[3], sex: data[4], age_type: data[5], date_of_birth: data[6], meal_time: data[7], from_date: data[8], to_date: data[9], height: data[10], weight: data[11], bmi: data[12], email: data[13], parent_name: data[14], order_source: data[15], meal_restriction_id: meal_restriction_id, food_category_id: food_category_id, stud_type: data[17])
Standard.where(tenant_id:tenant.id).pluck(:standard).include?data[3]
tenant.tenant_details.pluck(:meal_restriction_id).flatten.uniq
tenant.tenant_details.pluck(:meal_restriction_id).flatten.uniq.include?(meal_restriction_id)
tenant.tenant_details.pluck(:meal_restriction_id).flatten.uniq.include?(meal_restriction_id) and Standard.where(tenant_id:tenant.id).pluck(:standard).include?data[3]
meal_restriction_id = nil
 meal_restriction = MealRestriction.find_by('lower(meal_restriction_name) = ?', data[16].downcase)
data[16]
data[16].present?
    food_category_id = FoodCategory.find_by('lower(name) = ?', "veg").id
